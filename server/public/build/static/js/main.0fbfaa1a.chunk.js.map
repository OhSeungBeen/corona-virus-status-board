{"version":3,"sources":["assets/img/react-logo.png","components/Navbars/AdminNavbar.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","components/FixedPlugin/FixedPlugin.jsx","views/DomesticStatus.jsx","views/Icons.jsx","views/GlobalStatus.jsx","views/Map.jsx","layouts/Admin/Admin.jsx","routes.js","index.js","variables/charts.jsx"],"names":["module","exports","AdminNavbar","React","Component","constructor","props","super","updateColor","window","innerWidth","this","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","className","classNames","expand","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","href","e","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","id","navbar","isOpen","nav","modalClassName","toggle","placeholder","data-dismiss","Footer","Date","getFullYear","rel","target","ps","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","src","imgSrc","alt","text","Link","to","innerLink","data","ref","map","prop","key","redirect","path","pro","NavLink","layout","activeClassName","icon","rtlName","name","defaultProps","FixedPlugin","handleClick","classes","activateMode","mode","body","add","data-color","handleBgClick","Dashboard","setBgChartData","bigChartData","domesticStatus","fetch","then","res","json","result","confirmator","toLocaleString","isolate","dead","inspection","console","log","lg","tag","domesticStatusChart","options","xs","sm","active","size","defaultChecked","chartExample1","Icons","md","responsive","GlobalStatus","globalStatus","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","Map","style","position","overflow","googleMapURL","loadingElement","height","containerElement","mapElement","component","DomesticStatus","Admin","getRoutes","Route","backgroundColor","getBrandText","i","length","mainPanel","tables","querySelectorAll","componentDidUpdate","history","action","scrollTop","scrollingElement","Switch","hist","createBrowserHistory","ReactDOM","Router","Redirect","from","getElementById","date","results","push","data1","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data2","data3","maintainAspectRatio","legend","display","tooltips","titleFontColor","bodyFontColor","bodySpacing","xPadding","intersect","scales","yAxes","barPercentage","gridLines","drawBorder","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","citys","numbers","domesticStatusByCity","sortable","city","sort","a","b","forEach","item","hoverBackgroundColor"],"mappings":"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","file":"static/js/main.0fbfaa1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.eb6be414.png\";","import React from 'react';\r\n// nodejs library that concatenates classes\r\nimport classNames from 'classnames';\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n} from 'reactstrap';\r\n\r\nclass AdminNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapseOpen: false,\r\n      modalSearch: false,\r\n      color: 'navbar-transparent',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateColor);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateColor);\r\n  }\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  updateColor = () => {\r\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\r\n      this.setState({\r\n        color: 'bg-white',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: 'navbar-transparent',\r\n      });\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  toggleCollapse = () => {\r\n    if (this.state.collapseOpen) {\r\n      this.setState({\r\n        color: 'navbar-transparent',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: 'bg-white',\r\n      });\r\n    }\r\n    this.setState({\r\n      collapseOpen: !this.state.collapseOpen,\r\n    });\r\n  };\r\n  // this function is to open the Search modal\r\n  toggleModalSearch = () => {\r\n    this.setState({\r\n      modalSearch: !this.state.modalSearch,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar\r\n          className={classNames('navbar-absolute', this.state.color)}\r\n          expand=\"lg\"\r\n        >\r\n          <Container fluid>\r\n            <div className=\"navbar-wrapper\">\r\n              <div\r\n                className={classNames('navbar-toggle d-inline', {\r\n                  toggled: this.props.sidebarOpened,\r\n                })}\r\n              >\r\n                <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  onClick={this.props.toggleSidebar}\r\n                >\r\n                  <span className=\"navbar-toggler-bar bar1\" />\r\n                  <span className=\"navbar-toggler-bar bar2\" />\r\n                  <span className=\"navbar-toggler-bar bar3\" />\r\n                </button>\r\n              </div>\r\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                {this.props.brandText}\r\n              </NavbarBrand>\r\n            </div>\r\n            <button\r\n              aria-expanded={false}\r\n              aria-label=\"Toggle navigation\"\r\n              className=\"navbar-toggler\"\r\n              data-target=\"#navigation\"\r\n              data-toggle=\"collapse\"\r\n              id=\"navigation\"\r\n              type=\"button\"\r\n              onClick={this.toggleCollapse}\r\n            >\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            </button>\r\n            <Collapse navbar isOpen={this.state.collapseOpen}>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <InputGroup className=\"search-bar\">\r\n                  <Button\r\n                    color=\"link\"\r\n                    data-target=\"#searchModal\"\r\n                    data-toggle=\"modal\"\r\n                    id=\"search-button\"\r\n                    onClick={this.toggleModalSearch}\r\n                  >\r\n                    <i className=\"tim-icons icon-zoom-split\" />\r\n                    <span className=\"d-lg-none d-md-block\">Search</span>\r\n                  </Button>\r\n                </InputGroup>\r\n                <UncontrolledDropdown nav>\r\n                  {/* <DropdownToggle\r\n                    caret\r\n                    color=\"default\"\r\n                    data-toggle=\"dropdown\"\r\n                    nav\r\n                  >\r\n                    <div className=\"notification d-none d-lg-block d-xl-block\" />\r\n                    <i className=\"tim-icons icon-sound-wave\" />\r\n                    <p className=\"d-lg-none\">Notifications</p>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Mike John responded to your email\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        You have 5 more tasks\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Your friend Michael is in town\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Another notification\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Another one\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                  </DropdownMenu> */}\r\n                </UncontrolledDropdown>\r\n                <UncontrolledDropdown nav>\r\n                  {/* <DropdownToggle\r\n                    caret\r\n                    color=\"default\"\r\n                    data-toggle=\"dropdown\"\r\n                    nav\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                    <div className=\"photo\">\r\n                      <img alt=\"...\" src={require('assets/img/anime3.png')} />\r\n                    </div>\r\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\r\n                    <p className=\"d-lg-none\">Log out</p>\r\n                  </DropdownToggle> */}\r\n                  {/* <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\r\n                    </NavLink>\r\n                    <DropdownItem divider tag=\"li\" />\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\r\n                    </NavLink>\r\n                  </DropdownMenu> */}\r\n                </UncontrolledDropdown>\r\n                <li className=\"separator d-lg-none\" />\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n        <Modal\r\n          modalClassName=\"modal-search\"\r\n          isOpen={this.state.modalSearch}\r\n          toggle={this.toggleModalSearch}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\r\n            <button\r\n              aria-label=\"Close\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              type=\"button\"\r\n              onClick={this.toggleModalSearch}\r\n            >\r\n              <i className=\"tim-icons icon-simple-remove\" />\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Container, Row, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <Container fluid>\r\n          {/* <Nav>\r\n            <NavItem>\r\n              <NavLink href=\"javascript:void(0)\">Creative Tim</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"javascript:void(0)\">About Us</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"javascript:void(0)\">Blog</NavLink>\r\n            </NavItem>\r\n          </Nav> */}\r\n          <div className=\"copyright\">\r\n            © {new Date().getFullYear()} made with{' '}\r\n            <i className=\"tim-icons icon-heart-2\" /> by{' '}\r\n            <a\r\n              href=\"javascript:void(0)\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              오 승 빈\r\n            </a>{' '}\r\n            for a better web.\r\n          </div>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","/*eslint-disable*/\r\nimport React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from 'prop-types';\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\n// reactstrap components\r\nimport { Nav } from 'reactstrap';\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeRoute.bind(this);\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebar, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n  linkOnClick = () => {\r\n    document.documentElement.classList.remove('nav-open');\r\n  };\r\n  render() {\r\n    const { bgColor, routes, rtlActive, logo } = this.props;\r\n    let logoImg = null;\r\n    let logoText = null;\r\n    if (logo !== undefined) {\r\n      if (logo.outterLink !== undefined) {\r\n        logoImg = (\r\n          <a\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-mini\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </a>\r\n        );\r\n        logoText = (\r\n          <a\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-normal\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </a>\r\n        );\r\n      } else {\r\n        logoImg = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-mini\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </Link>\r\n        );\r\n        logoText = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-normal\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </Link>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"sidebar\" data={bgColor}>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n          {logoImg !== null || logoText !== null ? (\r\n            <div className=\"logo\">\r\n              {/* {logoImg} */}\r\n              {logoText}\r\n            </div>\r\n          ) : null}\r\n          <Nav>\r\n            {routes.map((prop, key) => {\r\n              if (prop.redirect) return null;\r\n              return (\r\n                <li\r\n                  className={\r\n                    this.activeRoute(prop.path) +\r\n                    (prop.pro ? ' active-pro' : '')\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.layout + prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    onClick={this.props.toggleSidebar}\r\n                  >\r\n                    <i className={prop.icon} />\r\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </Nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  bgColor: 'primary',\r\n  routes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  bgColor: PropTypes.oneOf(['primary', 'blue', 'green']),\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\r\n\r\n// reactstrap components\r\n// import { Button } from 'reactstrap';\r\n\r\nclass FixedPlugin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      classes: 'dropdown show-dropdown',\r\n    };\r\n  }\r\n  handleClick = () => {\r\n    if (this.state.classes === 'dropdown show-dropdown') {\r\n      this.setState({ classes: 'dropdown show-dropdown show' });\r\n    } else {\r\n      this.setState({ classes: 'dropdown show-dropdown' });\r\n    }\r\n  };\r\n  activateMode = mode => {\r\n    switch (mode) {\r\n      case 'light':\r\n        document.body.classList.add('white-content');\r\n        break;\r\n      default:\r\n        document.body.classList.remove('white-content');\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fixed-plugin\">\r\n        <div className={this.state.classes}>\r\n          <div onClick={this.handleClick}>\r\n            <i className=\"fa fa-cog fa-2x\" />\r\n          </div>\r\n          <ul className=\"dropdown-menu show\">\r\n            <li className=\"header-title\">SIDEBAR BACKGROUND</li>\r\n            <li className=\"adjustments-line\">\r\n              <div className=\"badge-colors text-center\">\r\n                <span\r\n                  className={\r\n                    this.props.bgColor === 'primary'\r\n                      ? 'badge filter badge-primary active'\r\n                      : 'badge filter badge-primary'\r\n                  }\r\n                  data-color=\"primary\"\r\n                  onClick={() => {\r\n                    this.props.handleBgClick('primary');\r\n                  }}\r\n                />{' '}\r\n                <span\r\n                  className={\r\n                    this.props.bgColor === 'blue'\r\n                      ? 'badge filter badge-info active'\r\n                      : 'badge filter badge-info'\r\n                  }\r\n                  data-color=\"blue\"\r\n                  onClick={() => {\r\n                    this.props.handleBgClick('blue');\r\n                  }}\r\n                />{' '}\r\n                <span\r\n                  className={\r\n                    this.props.bgColor === 'green'\r\n                      ? 'badge filter badge-success active'\r\n                      : 'badge filter badge-success'\r\n                  }\r\n                  data-color=\"green\"\r\n                  onClick={() => {\r\n                    this.props.handleBgClick('green');\r\n                  }}\r\n                />{' '}\r\n              </div>\r\n            </li>\r\n            <li className=\"adjustments-line text-center color-change\">\r\n              <span className=\"color-label\">LIGHT MODE</span>{' '}\r\n              <span\r\n                className=\"badge light-badge mr-2\"\r\n                onClick={() => this.activateMode('light')}\r\n              />{' '}\r\n              <span\r\n                className=\"badge dark-badge ml-2\"\r\n                onClick={() => this.activateMode('dark')}\r\n              />{' '}\r\n              <span className=\"color-label\">DARK MODE</span>{' '}\r\n            </li>\r\n            <li></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FixedPlugin;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { HorizontalBar, Line } from 'react-chartjs-2';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nimport { domesticStatusChart, chartExample1 } from 'variables/charts.jsx';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { domesticStatus: {}, bigChartData: 'data1' };\r\n  }\r\n  setBgChartData = name => {\r\n    this.setState({\r\n      bigChartData: name,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('/domesticStatus')\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        const domesticStatus = result;\r\n        domesticStatus.confirmator = domesticStatus.confirmator.toLocaleString();\r\n        domesticStatus.isolate = domesticStatus.isolate.toLocaleString();\r\n        domesticStatus.dead = domesticStatus.dead.toLocaleString();\r\n        domesticStatus.inspection = domesticStatus.inspection.toLocaleString();\r\n        this.setState({ domesticStatus });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log('render()');\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          {/* domesticStauts */}\r\n          <Row>\r\n            <Col lg=\"3\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-check-2 text-danger\" />{' '}\r\n                    {this.state.domesticStatus.confirmator}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardBody></CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자 격리헤제</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-simple-add text-success\" />{' '}\r\n                    {this.state.domesticStatus.isolate}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardBody></CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">사망자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-alert-circle-exc text-danger\" />{' '}\r\n                    {this.state.domesticStatus.dead}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardBody></CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">검사진행</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-refresh-02 text-info\" />{' '}\r\n                    {this.state.domesticStatus.inspection}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardBody></CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* domesticStatusBycity */}\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <i className=\"tim-icons icon-chart-bar-32 text-primary mr10\" />\r\n                  <h5 className=\"card-category display-content\">\r\n                    시도별 발생동향\r\n                  </h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <HorizontalBar\r\n                      data={domesticStatusChart.data}\r\n                      options={domesticStatusChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col className=\"text-left\" sm=\"6\">\r\n                      <h5 className=\"card-category\">확진자 추세</h5>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                      <ButtonGroup\r\n                        className=\"btn-group-toggle float-right\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <Button\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.bigChartData === 'data1',\r\n                          })}\r\n                          color=\"info\"\r\n                          id=\"0\"\r\n                          size=\"sm\"\r\n                          onClick={() => this.setBgChartData('data1')}\r\n                        >\r\n                          <input\r\n                            defaultChecked\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            확진자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-single-02\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"1\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.bigChartData === 'data2',\r\n                          })}\r\n                          onClick={() => this.setBgChartData('data2')}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            격리해제\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-gift-2\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"2\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.bigChartData === 'data3',\r\n                          })}\r\n                          onClick={() => this.setBgChartData('data3')}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            사망자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-tap-02\" />\r\n                          </span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Line\r\n                      data={chartExample1[this.state.bigChartData]}\r\n                      options={chartExample1.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  Alert,\r\n  Table,\r\n} from 'reactstrap';\r\n\r\nclass Icons extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>출처: 질병관리본부</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Alert color=\"info\">\r\n                    ㆍ개요\r\n                    <br />\r\n                    코로나 바이이러스(CoV)는 사람과 다양한 동물에 감염될 수 있는\r\n                    바이러스로서 유전자 크기 27~32kb의 RNA 바이러스\r\n                    <br /> <br />\r\n                    ㆍ분류\r\n                    <br />\r\n                    코로나 바이러스과에는 4개의 속(알파, 베타, 감마, 델타)이\r\n                    있음\r\n                    <br />\r\n                    알파․베타 : 사람과 동물에게 감염\r\n                    <br />\r\n                    감마․델타 : 동물에게 감염\r\n                    <br /> <br />\r\n                    ㆍ형태\r\n                    <br />\r\n                    형태는 코로나 바이러스의 명명과 같이 전자현미경 관찰시 구형\r\n                    외부 spike 단백질이 특징적인 크라운형태\r\n                    <br />\r\n                    ㆍ사람감염 코로나\r\n                    <br />\r\n                    바이러스 사람감염 코로나 바이러스는 현재까지 6종류가 알려져\r\n                    있음\r\n                    <br />\r\n                    감기를 일으키는 유형(229E, OC43, NL63, HKU1)\r\n                    <br />\r\n                    중증폐렴을 일으킬 수 있는 유형(SARS-CoV, MERS-CoV)\r\n                    <br /> <br />\r\n                    ㆍ코로나 바이러스 분류표\r\n                    <Table className=\"tablesorter\" responsive>\r\n                      <thead className=\"text-primary\">\r\n                        <tr>\r\n                          <th>속(genus)</th>\r\n                          <th>사람-코로나 바이러스</th>\r\n                          <th>사람 이외에 감염하는 코로나 바이러스</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>알파-코로나 바이러스(alphacoronavirus)</td>\r\n                          <td>229E, NL63</td>\r\n                          <td>\r\n                            돼지 유행성 설사 바이러스(porcine epidemic diarrhea\r\n                            virus : PEDV), (돼지) 전염성 위장염 바이러스\r\n                            (transmissible gastroenteritis virus : TGEV),\r\n                            개코로나 바이러스(canine coronavirus : CCoV), 고양이\r\n                            코로나 바이러스 (feline coronavirus : FCoV),\r\n                            Miniopterus bat(박쥐) coronavirus 1, Miniopterus\r\n                            bat(박쥐) coronavirus HKU8, Rhinolophus bat(박쥐)\r\n                            coronavirus HKU2, Scotophilus bat(박쥐) coronavirus\r\n                            512\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>베타-코로나 바이러스(betacoronavirus)</td>\r\n                          <td>OC43, HKU1, SARS-CoV, MERS-CoV</td>\r\n                          <td>\r\n                            돼지 혈구 응집성뇌척수염 바이러스(porcine\r\n                            hemagglutinating encephalomyelitis virus : PHEV),\r\n                            우코로나 바이러스(bovine coronavirus : BCoV),\r\n                            말코로나 바이러스 (equine coronavirus : EqCoV),\r\n                            쥐코로나 바이러스(murine coronavirus :\r\n                            MuCoV),Tylonycteris bat(박쥐) coronavirus HKU4,\r\n                            Pipistrellus bat(박쥐) coronavirus HKU5,Rousettus\r\n                            bat(박쥐) coronavirus HKU9\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>감마-코로나 바이러스(gammacoronavirus)</td>\r\n                          <td>없음</td>\r\n                          <td>\r\n                            새코로나 바이러스(Avian coronavirus),흰색\r\n                            돌고래(Beluga whale)-코로나 바이러스 SW1\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>델타-코로나 바이러스(deltacoronavirus)</td>\r\n                          <td>없음</td>\r\n                          <td>\r\n                            제주직박구리(Bulbul)-코로나 바이러스 HKU11,\r\n                            개똥지빠귀(Thrush)-코로나 바이러스 HKU12,\r\n                            킨바라(Munia)-코로나 바이러스 HKU13\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                    <br />\r\n                    <br />\r\n                    ㆍ코로나바이러스감염증-19(COVID-19) 정보\r\n                    <br />\r\n                    (병원체) 코로나바이러스감염증-19(COVID-19)\r\n                    <br />\r\n                    (감염원) 동물로 추정하고 조사중\r\n                    <br />\r\n                    (전파경로)\r\n                    <br />\r\n                    동물 → 사람 → 사람 전파 추정\r\n                    <br />\r\n                    사람간 전파는 비말(호흡기 분비물) 전파 추정\r\n                    <br />\r\n                    가족간, 의료기관 내 2차감염 확인\r\n                    <br />\r\n                    (임상증상) 발열, 호흡기증상(기침, 호흡곤란), 폐렴\r\n                    <br />\r\n                  </Alert>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Icons;\r\n","import React from 'react';\r\n// import { HorizontalBar } from 'react-chartjs-2';\r\n\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from 'reactstrap';\r\n\r\n// import { domesticStatusChart } from 'variables/charts.jsx';\r\n\r\nclass GlobalStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { globalStatus: {} };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/globalStatus')\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        const globalStatus = result;\r\n        globalStatus.confirmator = globalStatus.confirmator.toLocaleString();\r\n        globalStatus.isolate = globalStatus.isolate.toLocaleString();\r\n        globalStatus.dead = globalStatus.dead.toLocaleString();\r\n        this.setState({ globalStatus });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log('render()');\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          {/* domesticStauts */}\r\n          <Row>\r\n            <Col lg=\"4\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-check-2 text-danger\" />{' '}\r\n                    {this.state.globalStatus.confirmator}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardBody></CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"4\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자 격리헤제</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-simple-add text-success\" />{' '}\r\n                    {this.state.globalStatus.isolate}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardBody></CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"4\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">사망자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-alert-circle-exc text-danger\" />{' '}\r\n                    {this.state.globalStatus.dead}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardBody></CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* globalStatusByCountry */}\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <i className=\"tim-icons icon-chart-bar-32 text-primary mr10\" />\r\n                  <h5 className=\"card-category display-content\">\r\n                    나라별 발생동향(서비스 준비중입니다.)\r\n                  </h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    {/* <HorizontalBar\r\n                      data={domesticStatusChart.data}\r\n                      options={domesticStatusChart.options}\r\n                    /> */}\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalStatus;\r\n","import React from 'react';\r\n// react plugin used to create google maps\r\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps';\r\n\r\n// reactstrap components\r\nimport { Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\n\r\nconst MapWrapper = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap\r\n      defaultZoom={7}\r\n      defaultCenter={{ lat: 36.4203004, lng: 128.31796 }}\r\n      defaultOptions={{\r\n        scrollwheel: false,\r\n      }}\r\n    ></GoogleMap>\r\n  )),\r\n);\r\n\r\nclass Map extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card className=\"card-plain\">\r\n                <CardHeader>서비스 준비 중입니다.</CardHeader>\r\n                <CardBody>\r\n                  <div\r\n                    id=\"map\"\r\n                    className=\"map\"\r\n                    style={{ position: 'relative', overflow: 'hidden' }}\r\n                  >\r\n                    <MapWrapper\r\n                      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAPfPKg5VQGjvTQXY4ejFB09fNrZMB1pyg\"\r\n                      loadingElement={<div style={{ height: `100%` }} />}\r\n                      containerElement={<div style={{ height: `100%` }} />}\r\n                      mapElement={<div style={{ height: `100%` }} />}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\n// core components\r\nimport AdminNavbar from 'components/Navbars/AdminNavbar.jsx';\r\nimport Footer from 'components/Footer/Footer.jsx';\r\nimport Sidebar from 'components/Sidebar/Sidebar.jsx';\r\nimport FixedPlugin from 'components/FixedPlugin/FixedPlugin.jsx';\r\n\r\nimport routes from 'routes.js';\r\n\r\nimport logo from 'assets/img/react-logo.png';\r\n\r\nvar ps;\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backgroundColor: 'blue',\r\n      sidebarOpened:\r\n        document.documentElement.className.indexOf('nav-open') !== -1,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      document.documentElement.className += ' perfect-scrollbar-on';\r\n      document.documentElement.classList.remove('perfect-scrollbar-off');\r\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\r\n      let tables = document.querySelectorAll('.table-responsive');\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      ps.destroy();\r\n      document.documentElement.className += ' perfect-scrollbar-off';\r\n      document.documentElement.classList.remove('perfect-scrollbar-on');\r\n    }\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === 'PUSH') {\r\n      if (navigator.platform.indexOf('Win') > -1) {\r\n        let tables = document.querySelectorAll('.table-responsive');\r\n        for (let i = 0; i < tables.length; i++) {\r\n          ps = new PerfectScrollbar(tables[i]);\r\n        }\r\n      }\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n  // this function opens and closes the sidebar on small devices\r\n  toggleSidebar = () => {\r\n    document.documentElement.classList.toggle('nav-open');\r\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\r\n  };\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === '/admin') {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  handleBgClick = color => {\r\n    this.setState({ backgroundColor: color });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path,\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return 'Brand';\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"wrapper\">\r\n          <Sidebar\r\n            {...this.props}\r\n            routes={routes}\r\n            bgColor={this.state.backgroundColor}\r\n            logo={{\r\n              outterLink: '/',\r\n              text: '코로나 바이러스-19 상황판',\r\n              /* imgSrc: logo, */\r\n            }}\r\n            toggleSidebar={this.toggleSidebar}\r\n          />\r\n          <div\r\n            className=\"main-panel\"\r\n            ref=\"mainPanel\"\r\n            data={this.state.backgroundColor}\r\n          >\r\n            <AdminNavbar\r\n              {...this.props}\r\n              brandText={this.getBrandText(this.props.location.pathname)}\r\n              toggleSidebar={this.toggleSidebar}\r\n              sidebarOpened={this.state.sidebarOpened}\r\n            />\r\n            <Switch>{this.getRoutes(routes)}</Switch>\r\n            {// we don't want the Footer to be rendered on map page\r\n            this.props.location.pathname.indexOf('maps') !== -1 ? null : (\r\n              <Footer fluid />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <FixedPlugin\r\n          bgColor={this.state.backgroundColor}\r\n          handleBgClick={this.handleBgClick}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import DomesticStatus from 'views/DomesticStatus.jsx';\r\nimport Icons from 'views/Icons.jsx';\r\nimport GlobalStatus from 'views/GlobalStatus.jsx';\r\nimport Map from 'views/Map.jsx';\r\n// import Rtl from 'views/Rtl.jsx';\r\n// import TableList from 'views/TableList.jsx';\r\n// import Typography from 'views/Typography.jsx';\r\n// import UserProfile from 'views/UserProfile.jsx';\r\n\r\nvar routes = [\r\n  {\r\n    path: '/dashboard',\r\n    name: '대한민국 발생 현황',\r\n    icon: 'tim-icons icon-molecule-40',\r\n    component: DomesticStatus,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/notifications',\r\n    name: '전 세계 발생 현황 ',\r\n    icon: 'tim-icons icon-world',\r\n    component: GlobalStatus,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/icons',\r\n    name: '코로나 바이러스?',\r\n    icon: 'tim-icons icon-zoom-split',\r\n    component: Icons,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/map',\r\n    name: '지도로 알아보기',\r\n    icon: 'tim-icons icon-map-big',\r\n    component: Map,\r\n    layout: '/admin',\r\n  },\r\n  // {\r\n  //   path: '/user-profile',\r\n  //   name: 'User Profile',\r\n  //   icon: 'tim-icons icon-single-02',\r\n  //   component: UserProfile,\r\n  //   layout: '/admin',\r\n  // },\r\n  // {\r\n  //   path: '/tables',\r\n  //   name: 'Table List',\r\n  //   icon: 'tim-icons icon-puzzle-10',\r\n  //   component: TableList,\r\n  //   layout: '/admin',\r\n  // },\r\n  // {\r\n  //   path: '/typography',\r\n  //   name: 'Typography',\r\n  //   icon: 'tim-icons icon-align-center',\r\n  //   component: Typography,\r\n  //   layout: '/admin',\r\n  // },\r\n  // {\r\n  //   path: '/rtl-support',\r\n  //   name: 'RTL Support',\r\n  //   icon: 'tim-icons icon-world',\r\n  //   component: Rtl,\r\n  //   layout: '/rtl',\r\n  // },\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport AdminLayout from 'layouts/Admin/Admin.jsx';\r\n\r\nimport 'assets/css/black-dashboard-react.css';\r\nimport 'assets/demo/demo.css';\r\nimport 'assets/css/nucleo-icons.css';\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={hist}>\r\n    <Switch>\r\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\r\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n","const confirmator = [];\r\nconst isolate = [];\r\nconst dead = [];\r\nconst date = [];\r\nfetch('/domesticStatus/dailyData')\r\n  .then(res => res.json())\r\n  .then(results => {\r\n    for (let result of results) {\r\n      confirmator.push(result.confirmator);\r\n      isolate.push(result.isolate);\r\n      dead.push(result.dead);\r\n      date.push(result.date);\r\n    }\r\n  });\r\n\r\nlet chart1_2_options = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    backgroundColor: '#f5f5f5',\r\n    titleFontColor: '#333',\r\n    bodyFontColor: '#666',\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: 'nearest',\r\n    intersect: 0,\r\n    position: 'nearest',\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(29,140,248,0.0)',\r\n          zeroLineColor: 'transparent',\r\n        },\r\n        ticks: {\r\n          suggestedMin: 0,\r\n          suggestedMax: 110,\r\n          padding: 20,\r\n          fontColor: '#9a9a9a',\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(29,140,248,0.1)',\r\n          zeroLineColor: 'transparent',\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: '#9a9a9a',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nlet chartExample1 = {\r\n  data1: canvas => {\r\n    let ctx = canvas.getContext('2d');\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors\r\n\r\n    return {\r\n      labels: date,\r\n      datasets: [\r\n        {\r\n          label: '확진자',\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: '#1f8ef1',\r\n          pointBorderColor: 'rgba(255,255,255,0)',\r\n          pointHoverBackgroundColor: '#1f8ef1',\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: confirmator,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: canvas => {\r\n    let ctx = canvas.getContext('2d');\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors\r\n\r\n    return {\r\n      labels: date,\r\n      datasets: [\r\n        {\r\n          label: '격리헤재',\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: '#1f8ef1',\r\n          pointBorderColor: 'rgba(255,255,255,0)',\r\n          pointHoverBackgroundColor: '#1f8ef1',\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: isolate,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: canvas => {\r\n    let ctx = canvas.getContext('2d');\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors\r\n\r\n    return {\r\n      labels: date,\r\n      datasets: [\r\n        {\r\n          label: '사망자',\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: '#1f8ef1',\r\n          pointBorderColor: 'rgba(255,255,255,0)',\r\n          pointHoverBackgroundColor: '#1f8ef1',\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: dead,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// // #########################################\r\n// // // // used inside src/views/Dashboard.jsx\r\n// // #########################################\r\n\r\n// let chartExample2 = {\r\n//   data: canvas => {\r\n//     let ctx = canvas.getContext(\"2d\");\r\n\r\n//     let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n//     gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n//     gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n//     gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n//     return {\r\n//       labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\r\n//       datasets: [\r\n//         {\r\n//           label: \"Data\",\r\n//           fill: true,\r\n//           backgroundColor: gradientStroke,\r\n//           borderColor: \"#1f8ef1\",\r\n//           borderWidth: 2,\r\n//           borderDash: [],\r\n//           borderDashOffset: 0.0,\r\n//           pointBackgroundColor: \"#1f8ef1\",\r\n//           pointBorderColor: \"rgba(255,255,255,0)\",\r\n//           pointHoverBackgroundColor: \"#1f8ef1\",\r\n//           pointBorderWidth: 20,\r\n//           pointHoverRadius: 4,\r\n//           pointHoverBorderWidth: 15,\r\n//           pointRadius: 4,\r\n//           data: [80, 100, 70, 80, 120, 80]\r\n//         }\r\n//       ]\r\n//     };\r\n//   },\r\n//   options: chart1_2_options\r\n// };\r\n\r\n// // #########################################\r\n// // // // used inside src/views/Dashboard.jsx\r\n// // #########################################\r\n// const chartExample4 = {\r\n//   data: canvas => {\r\n//     let ctx = canvas.getContext(\"2d\");\r\n\r\n//     let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n//     gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\r\n//     gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\r\n//     gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\r\n\r\n//     return {\r\n//       labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\r\n//       datasets: [\r\n//         {\r\n//           label: \"My First dataset\",\r\n//           fill: true,\r\n//           backgroundColor: gradientStroke,\r\n//           borderColor: \"#00d6b4\",\r\n//           borderWidth: 2,\r\n//           borderDash: [],\r\n//           borderDashOffset: 0.0,\r\n//           pointBackgroundColor: \"#00d6b4\",\r\n//           pointBorderColor: \"rgba(255,255,255,0)\",\r\n//           pointHoverBackgroundColor: \"#00d6b4\",\r\n//           pointBorderWidth: 20,\r\n//           pointHoverRadius: 4,\r\n//           pointHoverBorderWidth: 15,\r\n//           pointRadius: 4,\r\n//           data: [90, 27, 60, 12, 80]\r\n//         }\r\n//       ]\r\n//     };\r\n//   },\r\n//   options: {\r\n//     maintainAspectRatio: false,\r\n//     legend: {\r\n//       display: false\r\n//     },\r\n\r\n//     tooltips: {\r\n//       backgroundColor: \"#f5f5f5\",\r\n//       titleFontColor: \"#333\",\r\n//       bodyFontColor: \"#666\",\r\n//       bodySpacing: 4,\r\n//       xPadding: 12,\r\n//       mode: \"nearest\",\r\n//       intersect: 0,\r\n//       position: \"nearest\"\r\n//     },\r\n//     responsive: true,\r\n//     scales: {\r\n//       yAxes: [\r\n//         {\r\n//           barPercentage: 1.6,\r\n//           gridLines: {\r\n//             drawBorder: false,\r\n//             color: \"rgba(29,140,248,0.0)\",\r\n//             zeroLineColor: \"transparent\"\r\n//           },\r\n//           ticks: {\r\n//             suggestedMin: 50,\r\n//             suggestedMax: 125,\r\n//             padding: 20,\r\n//             fontColor: \"#9e9e9e\"\r\n//           }\r\n//         }\r\n//       ],\r\n\r\n//       xAxes: [\r\n//         {\r\n//           barPercentage: 1.6,\r\n//           gridLines: {\r\n//             drawBorder: false,\r\n//             color: \"rgba(0,242,195,0.1)\",\r\n//             zeroLineColor: \"transparent\"\r\n//           },\r\n//           ticks: {\r\n//             padding: 20,\r\n//             fontColor: \"#9e9e9e\"\r\n//           }\r\n//         }\r\n//       ]\r\n//     }\r\n//   }\r\n// };\r\n\r\n// module.exports = {\r\n//   chartExample1, // in src/views/Dashboard.jsx\r\n//   chartExample2, // in src/views/Dashboard.jsx\r\n//   chartExample4 // in src/views/Dashboard.jsx\r\n// };\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.jsx\r\n// #########################################\r\n\r\nconst citys = [];\r\nconst numbers = [];\r\nfetch('/domesticStatusByCity')\r\n  .then(res => res.json())\r\n  .then(result => {\r\n    const domesticStatusByCity = result;\r\n\r\n    const sortable = [];\r\n    for (let city in domesticStatusByCity) {\r\n      sortable.push([city, domesticStatusByCity[city]]);\r\n    }\r\n    sortable.sort((a, b) => b[1] - a[1]);\r\n\r\n    sortable.forEach(item => {\r\n      citys.push(item[0]);\r\n      numbers.push(item[1]);\r\n    });\r\n  });\r\n\r\nlet domesticStatusChart = {\r\n  data: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n    return {\r\n      labels: citys,\r\n      datasets: [\r\n        {\r\n          label: '확진환자',\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: numbers,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: '#f5f5f5',\r\n      titleFontColor: '#333',\r\n      bodyFontColor: '#666',\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: 'nearest',\r\n      intersect: 0,\r\n      position: 'nearest',\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            suggestedMin: 60,\r\n            suggestedMax: 120,\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nmodule.exports = {\r\n  domesticStatusChart,\r\n  chartExample1,\r\n};\r\n"],"sourceRoot":""}