{"version":3,"sources":["variables/charts.jsx","components/Navbars/AdminNavbar.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","components/FixedPlugin/FixedPlugin.jsx","variables/DomesticStatusBySexDoughnut.jsx","variables/DomesticStatusByAgeDoughnut.jsx","variables/DomesticStatusByCityMap.jsx","variables/DomesticStatusByCityTable.jsx","views/DomesticStatus.jsx","views/Information.jsx","variables/GlobalStautsByCountryTable.jsx","variables/GlobalStatusByCountryMap.jsx","views/GlobalStatus.jsx","views/Map.jsx","views/News.jsx","layouts/Admin.jsx","routes.js","index.js"],"names":["citys","numbers","fetch","then","res","json","result","domesticStatusByCity","sortable","city","push","sort","a","b","confirmator","forEach","item","domesticStatusChart","data","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","borderDash","borderDashOffset","options","plugins","datalabels","anchor","align","formatter","value","context","sum","chart","map","Number","percentage","toFixed","toLocaleString","font","size","maintainAspectRatio","legend","display","tooltips","callbacks","title","tooltipItem","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","gridLines","drawBorder","color","zeroLineColor","ticks","padding","fontColor","xAxes","isolate","dead","date","dailyConfirmator","dailyIsolate","dailyDead","dailyInspectionSum","dailyInspection","dailyInspectionNegative","results","index","Object","keys","length","inspectionSum","inspection","inspectionNegative","substring","domesticStatusDailyChart","data1","type","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","yAxisID","offset","data2","data3","datasetIndex","barPercentage","id","show","country","countryByCityNumbers","countryNumbers","key","globalStatusByCountryChart","module","exports","AdminNavbar","React","Component","constructor","props","super","updateColor","window","innerWidth","this","state","collapseOpen","setState","toggleCollapse","toggleModalSearch","modalSearch","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","className","classNames","expand","fluid","toggled","sidebarOpened","onClick","toggleSidebar","href","e","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","navbar","isOpen","nav","modalClassName","toggle","placeholder","data-dismiss","Footer","Date","getFullYear","ps","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","target","src","imgSrc","alt","text","Link","to","innerLink","ref","prop","redirect","path","pro","NavLink","layout","activeClassName","icon","rtlName","name","defaultProps","FixedPlugin","handleClick","classes","activateMode","body","add","data-color","handleBgClick","DomesticStatusBySexDoughnut","boxWidth","fontStyle","dataIndex","weight","DomesticStatusByAgeDoughnut","DomesticStatusByCityMap","useState","domesticByCityNumbers","setDomesticByCityNumbers","useEffect","arrayResults","v","split","f","unshift","chartType","region","resolution","colorAxis","colors","displayMode","enableRegionInteractivity","keepAspectRatio","mapsApiKey","Table","columns","useTable","initialState","pageIndex","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","row","i","getRowProps","cells","cell","getCellProps","disabled","DomesticStatusByCityTable","setDomesticStatusByCity","sortedResults","increase","Header","accessor","Dashboard","domesticStatus","dailyData","sexData","ageData","setDailyData","setSexData","setAgeData","mortality","console","log","lg","xs","tag","sm","active","defaultChecked","redraw","Information","md","defaultValue","onChange","style","width","GlobalStautsByCounrtyTable","setCountryByCityNumbers","number","counrty","korean","String","GlobalStatus","globalStatus","GlobalStatusByCountryMap","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","Map","overflow","googleMapURL","loadingElement","height","containerElement","mapElement","News","test","userAgent","url","allow","styles","bor","component","DomesticStatus","Admin","getRoutes","Route","getBrandText","mainPanel","tables","querySelectorAll","componentDidUpdate","history","action","scrollTop","scrollingElement","Switch","hist","createBrowserHistory","ReactDOM","Router","Redirect","from","getElementById"],"mappings":"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","file":"static/js/main.c79d2386.chunk.js","sourcesContent":["// domesticStatusBy------------------------------------------------------\r\nconst citys = [];\r\nconst numbers = [];\r\nfetch('/domesticStatusByCity')\r\n  .then(res => res.json())\r\n  .then(result => {\r\n    const domesticStatusByCity = result;\r\n\r\n    const sortable = [];\r\n    for (let city in domesticStatusByCity) {\r\n      sortable.push([city, domesticStatusByCity[city]]);\r\n    }\r\n    sortable.sort((a, b) => b[1].confirmator - a[1].confirmator);\r\n\r\n    sortable.forEach(item => {\r\n      citys.push(item[0]);\r\n      numbers.push(item[1].confirmator);\r\n    });\r\n  });\r\n\r\nlet domesticStatusChart = {\r\n  data: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n    return {\r\n      labels: citys,\r\n      datasets: [\r\n        {\r\n          label: '확진환자',\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: numbers,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    plugins: {\r\n      datalabels: {\r\n        anchor: 'end',\r\n        align: 'end',\r\n        formatter: function(value, context) {\r\n          let sum = 0;\r\n          let dataArr = context.chart.data.datasets[0].data;\r\n          dataArr.map(data => {\r\n            sum += Number(data);\r\n          });\r\n          let percentage = ((value * 100) / sum).toFixed(2) + '%';\r\n          return `${Number(value).toLocaleString()}명(${percentage})`;\r\n        },\r\n        font: {\r\n          size: '12',\r\n        },\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        title: function(tooltipItem, data) {\r\n          return data['labels'][tooltipItem[0]['index']];\r\n        },\r\n        label: function(tooltipItem, data) {\r\n          return (\r\n            Number(\r\n              data['datasets'][0]['data'][tooltipItem['index']],\r\n            ).toLocaleString() + '명'\r\n          );\r\n        },\r\n      },\r\n      backgroundColor: '#f5f5f5',\r\n      titleFontColor: '#333',\r\n      bodyFontColor: '#666',\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: 'nearest',\r\n      intersect: 0,\r\n      position: 'nearest',\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n//-----------------------------------------------------------------------------------------------------\r\nconst confirmator = [];\r\nconst isolate = [];\r\nconst dead = [];\r\nconst date = [];\r\nconst dailyConfirmator = [];\r\nconst dailyIsolate = [];\r\nconst dailyDead = [];\r\nconst dailyInspectionSum = [];\r\nconst dailyInspection = [];\r\nconst dailyInspectionNegative = [];\r\n\r\nfetch('/domesticStatus/dailyData')\r\n  .then(res => res.json())\r\n  .then(results => {\r\n    for (let index in results) {\r\n      if (index === '0') continue;\r\n      dailyConfirmator.push(\r\n        results[index].confirmator - results[index - 1].confirmator,\r\n      );\r\n      dailyIsolate.push(results[index].isolate - results[index - 1].isolate);\r\n      dailyDead.push(results[index].dead - results[index - 1].dead);\r\n      //데이터 쌓이면 수정할것\r\n      if (Number(index) === Object.keys(results).length - 1) {\r\n        dailyInspectionSum.push(\r\n          results[index].inspectionSum - results[index - 1].inspectionSum,\r\n        );\r\n        dailyInspection.push(\r\n          results[index].inspection - results[index - 1].inspection,\r\n        );\r\n        dailyInspectionNegative.push(\r\n          results[index].inspectionNegative -\r\n            results[index - 1].inspectionNegative,\r\n        );\r\n      }\r\n\r\n      confirmator.push(results[index].confirmator);\r\n      isolate.push(results[index].isolate);\r\n      dead.push(results[index].dead);\r\n      date.push(results[index].date.substring(5, 10));\r\n    }\r\n  });\r\n\r\nlet domesticStatusDailyChart = {\r\n  data1: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n\r\n    return {\r\n      datasets: [\r\n        {\r\n          label: '확진자',\r\n          type: 'line',\r\n          data: dailyConfirmator,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: '#1f8ef1',\r\n          pointBorderColor: 'rgba(255,255,255,0)',\r\n          pointHoverBackgroundColor: '#1f8ef1',\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          yAxisID: 'y-axis-2',\r\n          datalabels: {\r\n            offset: 7,\r\n            align: 'left',\r\n            color: '#1d8cf8',\r\n            formatter: function(value, context) {\r\n              return `${Number(value).toLocaleString()}`;\r\n            },\r\n            font: {\r\n              size: '12',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          type: 'bar',\r\n          label: '누적확진자',\r\n          data: confirmator,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          datalabels: {\r\n            anchor: 'end',\r\n            align: 'top',\r\n            color: '#e14eca',\r\n            formatter: function(value, context) {\r\n              return `${Number(value).toLocaleString()}`;\r\n            },\r\n            font: {\r\n              size: '12',\r\n            },\r\n          },\r\n          yAxisID: 'y-axis-1',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n\r\n    return {\r\n      datasets: [\r\n        {\r\n          label: '격리헤제',\r\n          type: 'line',\r\n          data: dailyIsolate,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: '#1f8ef1',\r\n          pointBorderColor: 'rgba(255,255,255,0)',\r\n          pointHoverBackgroundColor: '#1f8ef1',\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          datalabels: {\r\n            offset: 7,\r\n            align: 'left',\r\n            color: '#1d8cf8',\r\n            formatter: function(value, context) {\r\n              return `${Number(value).toLocaleString()}`;\r\n            },\r\n            font: {\r\n              size: '12',\r\n            },\r\n          },\r\n          yAxisID: 'y-axis-2',\r\n        },\r\n        {\r\n          type: 'bar',\r\n          label: '누적 격리헤제',\r\n          data: isolate,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          yAxisID: 'y-axis-1',\r\n          datalabels: {\r\n            anchor: 'end',\r\n            align: 'top',\r\n            color: '#e14eca',\r\n            formatter: function(value, context) {\r\n              return `${Number(value).toLocaleString()}`;\r\n            },\r\n            font: {\r\n              size: '12',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n\r\n    return {\r\n      datasets: [\r\n        {\r\n          label: '사망자',\r\n          type: 'line',\r\n          data: dailyDead,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: '#1f8ef1',\r\n          pointBorderColor: 'rgba(255,255,255,0)',\r\n          pointHoverBackgroundColor: '#1f8ef1',\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          yAxisID: 'y-axis-2',\r\n          datalabels: {\r\n            offset: 7,\r\n            align: 'left',\r\n            color: '#1d8cf8',\r\n            formatter: function(value, context) {\r\n              return `${Number(value).toLocaleString()}`;\r\n            },\r\n            font: {\r\n              size: '12',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          type: 'bar',\r\n          label: '누적 사망자',\r\n          data: dead,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          yAxisID: 'y-axis-1',\r\n          datalabels: {\r\n            color: '#e14eca',\r\n            anchor: 'end',\r\n            align: 'top',\r\n            formatter: function(value, context) {\r\n              return `${Number(value).toLocaleString()}`;\r\n            },\r\n            font: {\r\n              size: '12',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  },\r\n\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    legend: {\r\n      display: true,\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem, data) {\r\n          return `${\r\n            data.datasets[tooltipItem.datasetIndex].label\r\n          }: ${data.datasets[tooltipItem.datasetIndex].data[\r\n            tooltipItem.index\r\n          ].toLocaleString()}명`;\r\n        },\r\n      },\r\n      backgroundColor: '#f5f5f5',\r\n      titleFontColor: '#333',\r\n      bodyFontColor: '#666',\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: 'label',\r\n      intersect: 0,\r\n      position: 'nearest',\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barPercentage: 0.5,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(29,140,248,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9a9a9a',\r\n          },\r\n          labels: date,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-1',\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(29,140,248,0.0)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            // beginAtZero: true,\r\n            padding: 10,\r\n            fontColor: '#9a9a9a',\r\n          },\r\n          labels: {\r\n            show: true,\r\n          },\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-2',\r\n          gridLines: {\r\n            display: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            // beginAtZero: true,\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n          labels: {\r\n            show: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// globalStatusByCountry------------------------------\r\nconst country = [];\r\nconst countryByCityNumbers = [];\r\nconst countryNumbers = {};\r\nfetch('/globalStatusByCountry')\r\n  .then(res => res.json())\r\n  .then(results => {\r\n    for (let key in results) {\r\n      if (key === 'date' || key === 'Korea, South' || key === 'numbers')\r\n        continue;\r\n      country.push(key);\r\n      countryByCityNumbers.push(results[key]);\r\n    }\r\n    countryNumbers['numbers'] = results.numbers;\r\n  });\r\n\r\nlet globalStatusByCountryChart = {\r\n  data: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n    return {\r\n      labels: country,\r\n      datasets: [\r\n        {\r\n          label: '확진환자',\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: countryByCityNumbers,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: '#f5f5f5',\r\n      titleFontColor: '#333',\r\n      bodyFontColor: '#666',\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: 'nearest',\r\n      intersect: 0,\r\n      position: 'nearest',\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nmodule.exports = {\r\n  domesticStatusChart,\r\n  domesticStatusDailyChart,\r\n  globalStatusByCountryChart,\r\n  countryNumbers,\r\n  dailyConfirmator,\r\n  dailyIsolate,\r\n  dailyDead,\r\n  dailyInspectionSum,\r\n  dailyInspection,\r\n  dailyInspectionNegative,\r\n};\r\n","import React from 'react';\r\n// nodejs library that concatenates classes\r\nimport classNames from 'classnames';\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n} from 'reactstrap';\r\n\r\nclass AdminNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapseOpen: false,\r\n      modalSearch: false,\r\n      color: 'navbar-transparent',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateColor);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateColor);\r\n  }\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  updateColor = () => {\r\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\r\n      this.setState({\r\n        color: 'bg-white',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: 'navbar-transparent',\r\n      });\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  toggleCollapse = () => {\r\n    if (this.state.collapseOpen) {\r\n      this.setState({\r\n        color: 'navbar-transparent',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: 'bg-white',\r\n      });\r\n    }\r\n    this.setState({\r\n      collapseOpen: !this.state.collapseOpen,\r\n    });\r\n  };\r\n  // this function is to open the Search modal\r\n  toggleModalSearch = () => {\r\n    this.setState({\r\n      modalSearch: !this.state.modalSearch,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar\r\n          className={classNames('navbar-absolute', this.state.color)}\r\n          expand=\"lg\"\r\n        >\r\n          <Container fluid>\r\n            <div className=\"navbar-wrapper\">\r\n              <div\r\n                className={classNames('navbar-toggle d-inline', {\r\n                  toggled: this.props.sidebarOpened,\r\n                })}\r\n              >\r\n                <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  onClick={this.props.toggleSidebar}\r\n                >\r\n                  <span className=\"navbar-toggler-bar bar1\" />\r\n                  <span className=\"navbar-toggler-bar bar2\" />\r\n                  <span className=\"navbar-toggler-bar bar3\" />\r\n                </button>\r\n              </div>\r\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                {this.props.brandText}\r\n              </NavbarBrand>\r\n            </div>\r\n            <button\r\n              aria-expanded={false}\r\n              aria-label=\"Toggle navigation\"\r\n              className=\"navbar-toggler\"\r\n              data-target=\"#navigation\"\r\n              data-toggle=\"collapse\"\r\n              id=\"navigation\"\r\n              type=\"button\"\r\n              onClick={this.toggleCollapse}\r\n            >\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            </button>\r\n            <Collapse navbar isOpen={this.state.collapseOpen}>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <InputGroup className=\"search-bar\">\r\n                  <Button\r\n                    color=\"link\"\r\n                    data-target=\"#searchModal\"\r\n                    data-toggle=\"modal\"\r\n                    id=\"search-button\"\r\n                    onClick={this.toggleModalSearch}\r\n                  >\r\n                    <i className=\"tim-icons icon-zoom-split\" />\r\n                    <span className=\"d-lg-none d-md-block\">Search</span>\r\n                  </Button>\r\n                </InputGroup>\r\n                <UncontrolledDropdown nav>\r\n                  {/* <DropdownToggle\r\n                    caret\r\n                    color=\"default\"\r\n                    data-toggle=\"dropdown\"\r\n                    nav\r\n                  >\r\n                    <div className=\"notification d-none d-lg-block d-xl-block\" />\r\n                    <i className=\"tim-icons icon-sound-wave\" />\r\n                    <p className=\"d-lg-none\">Notifications</p>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Mike John responded to your email\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        You have 5 more tasks\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Your friend Michael is in town\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Another notification\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Another one\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                  </DropdownMenu> */}\r\n                </UncontrolledDropdown>\r\n                <UncontrolledDropdown nav>\r\n                  {/* <DropdownToggle\r\n                    caret\r\n                    color=\"default\"\r\n                    data-toggle=\"dropdown\"\r\n                    nav\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                    <div className=\"photo\">\r\n                      <img alt=\"...\" src={require('assets/img/anime3.png')} />\r\n                    </div>\r\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\r\n                    <p className=\"d-lg-none\">Log out</p>\r\n                  </DropdownToggle> */}\r\n                  {/* <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\r\n                    </NavLink>\r\n                    <DropdownItem divider tag=\"li\" />\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\r\n                    </NavLink>\r\n                  </DropdownMenu> */}\r\n                </UncontrolledDropdown>\r\n                <li className=\"separator d-lg-none\" />\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n        <Modal\r\n          modalClassName=\"modal-search\"\r\n          isOpen={this.state.modalSearch}\r\n          toggle={this.toggleModalSearch}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\r\n            <button\r\n              aria-label=\"Close\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              type=\"button\"\r\n              onClick={this.toggleModalSearch}\r\n            >\r\n              <i className=\"tim-icons icon-simple-remove\" />\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React from 'react';\r\n\r\nimport { Container } from 'reactstrap';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <Container fluid>\r\n          {/* <Nav>\r\n            <NavItem>\r\n              <NavLink href=\"javascript:void(0)\">Creative Tim</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"javascript:void(0)\">About Us</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"javascript:void(0)\">Blog</NavLink>\r\n            </NavItem>\r\n          </Nav> */}\r\n          <div className=\"copyright\">\r\n            © {new Date().getFullYear()} made with{' '}\r\n            <i className=\"tim-icons icon-heart-2\" /> by 오 승 빈 for a better\r\n            web.\r\n          </div>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","/*eslint-disable*/\r\nimport React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from 'prop-types';\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\n// reactstrap components\r\nimport { Nav } from 'reactstrap';\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeRoute.bind(this);\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebar, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n  linkOnClick = () => {\r\n    document.documentElement.classList.remove('nav-open');\r\n  };\r\n  render() {\r\n    const { bgColor, routes, rtlActive, logo } = this.props;\r\n    let logoImg = null;\r\n    let logoText = null;\r\n    if (logo !== undefined) {\r\n      if (logo.outterLink !== undefined) {\r\n        logoImg = (\r\n          <a\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-mini\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </a>\r\n        );\r\n        logoText = (\r\n          <a\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-normal\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </a>\r\n        );\r\n      } else {\r\n        logoImg = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-mini\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </Link>\r\n        );\r\n        logoText = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-normal\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </Link>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"sidebar\" data={bgColor}>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n          {logoImg !== null || logoText !== null ? (\r\n            <div className=\"logo\">\r\n              {/* {logoImg} */}\r\n              {logoText}\r\n            </div>\r\n          ) : null}\r\n          <Nav>\r\n            {routes.map((prop, key) => {\r\n              if (prop.redirect) return null;\r\n              return (\r\n                <li\r\n                  className={\r\n                    this.activeRoute(prop.path) +\r\n                    (prop.pro ? ' active-pro' : '')\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.layout + prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    onClick={this.props.toggleSidebar}\r\n                  >\r\n                    <i className={prop.icon} />\r\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </Nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  bgColor: 'primary',\r\n  routes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  bgColor: PropTypes.oneOf(['primary', 'blue', 'green']),\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\r\n\r\n// reactstrap components\r\n// import { Button } from 'reactstrap';\r\n\r\nclass FixedPlugin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      classes: 'dropdown show-dropdown',\r\n    };\r\n  }\r\n  handleClick = () => {\r\n    if (this.state.classes === 'dropdown show-dropdown') {\r\n      this.setState({ classes: 'dropdown show-dropdown show' });\r\n    } else {\r\n      this.setState({ classes: 'dropdown show-dropdown' });\r\n    }\r\n  };\r\n  activateMode = mode => {\r\n    switch (mode) {\r\n      case 'light':\r\n        document.body.classList.add('white-content');\r\n        break;\r\n      default:\r\n        document.body.classList.remove('white-content');\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fixed-plugin\">\r\n        <div className={this.state.classes}>\r\n          <div onClick={this.handleClick}>\r\n            <i className=\"fa fa-cog fa-2x\" />\r\n          </div>\r\n          <ul className=\"dropdown-menu show\">\r\n            <li className=\"header-title\">SIDEBAR BACKGROUND</li>\r\n            <li className=\"adjustments-line\">\r\n              <div className=\"badge-colors text-center\">\r\n                <span\r\n                  className={\r\n                    this.props.bgColor === 'primary'\r\n                      ? 'badge filter badge-primary active'\r\n                      : 'badge filter badge-primary'\r\n                  }\r\n                  data-color=\"primary\"\r\n                  onClick={() => {\r\n                    this.props.handleBgClick('primary');\r\n                  }}\r\n                />{' '}\r\n                <span\r\n                  className={\r\n                    this.props.bgColor === 'blue'\r\n                      ? 'badge filter badge-info active'\r\n                      : 'badge filter badge-info'\r\n                  }\r\n                  data-color=\"blue\"\r\n                  onClick={() => {\r\n                    this.props.handleBgClick('blue');\r\n                  }}\r\n                />{' '}\r\n                <span\r\n                  className={\r\n                    this.props.bgColor === 'green'\r\n                      ? 'badge filter badge-success active'\r\n                      : 'badge filter badge-success'\r\n                  }\r\n                  data-color=\"green\"\r\n                  onClick={() => {\r\n                    this.props.handleBgClick('green');\r\n                  }}\r\n                />{' '}\r\n              </div>\r\n            </li>\r\n            <li className=\"adjustments-line text-center color-change\">\r\n              <span className=\"color-label\">LIGHT MODE</span>{' '}\r\n              <span\r\n                className=\"badge light-badge mr-2\"\r\n                onClick={() => this.activateMode('light')}\r\n              />{' '}\r\n              <span\r\n                className=\"badge dark-badge ml-2\"\r\n                onClick={() => this.activateMode('dark')}\r\n              />{' '}\r\n              <span className=\"color-label\">DARK MODE</span>{' '}\r\n            </li>\r\n            <li></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FixedPlugin;\r\n","const DomesticStatusBySexDoughnut = {\r\n  confirmator: {\r\n    labels: ['남성', '여성'],\r\n    datasets: [\r\n      {\r\n        data: [3430, 5467],\r\n        backgroundColor: ['#e14eca', '#1d8cf8'],\r\n        borderColor: '#27293d',\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  },\r\n  dead: {\r\n    labels: ['남성', '여성'],\r\n    datasets: [\r\n      {\r\n        data: [55, 49],\r\n        backgroundColor: ['#e14eca', '#1d8cf8'],\r\n        borderColor: '#27293d',\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    title: {\r\n      display: true,\r\n      text: '질병관리본부 2020-03-22 00시 기준',\r\n    },\r\n    layout: {\r\n      padding: 30,\r\n    },\r\n    backgroundColor: ['#e14eca', '#1d8cf8'],\r\n    tooltips: {\r\n      callbacks: {\r\n        title: function(tooltipItem, data) {\r\n          return data['labels'][tooltipItem[0]['index']];\r\n        },\r\n        label: function(tooltipItem, data) {\r\n          return (\r\n            data['datasets'][0]['data'][tooltipItem['index']].toLocaleString() +\r\n            '명'\r\n          );\r\n        },\r\n      },\r\n      backgroundColor: '#f5f5f5',\r\n      titleFontColor: '#333',\r\n      bodyFontColor: '#666',\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: 'label',\r\n      intersect: 0,\r\n      position: 'nearest',\r\n    },\r\n    legend: {\r\n      position: 'bottom',\r\n      labels: {\r\n        boxWidth: 13,\r\n        fontStyle: 'bold',\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      datalabels: {\r\n        formatter: function(value, context) {\r\n          let sum = 0;\r\n          let dataArr = context.chart.data.datasets[0].data;\r\n          dataArr.map(data => {\r\n            sum += data;\r\n          });\r\n          let percentage = ((value * 100) / sum).toFixed(2) + '%';\r\n          return `          ${\r\n            context.chart.data.labels[context.dataIndex]\r\n          }\\n${value.toLocaleString()}명 (${percentage})`;\r\n        },\r\n        color: '#fff',\r\n        font: {\r\n          size: '10',\r\n          weight: 'bold',\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default DomesticStatusBySexDoughnut;\r\n","const DomesticStatusByAgeDoughnut = {\r\n  confirmator: {\r\n    labels: [\r\n      '0-9세  ',\r\n      '10-19세',\r\n      '20-29세',\r\n      '30-39세',\r\n      '40-49세',\r\n      '50-59세',\r\n      '60-69세',\r\n      '70-79세',\r\n      '80세이상',\r\n    ],\r\n    datasets: [\r\n      {\r\n        data: [101, 460, 2396, 909, 1221, 1691, 1132, 595, 392],\r\n        backgroundColor: [\r\n          '#beaed4',\r\n          '#dfc27d',\r\n          '#e14eca',\r\n          '#7fc97f',\r\n          '#1d8cf8',\r\n          '#666666',\r\n          '#e6ab02',\r\n          '#d95f02',\r\n          '#1b9e77',\r\n        ],\r\n        borderColor: '#27293d',\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  },\r\n  dead: {\r\n    labels: ['30-39세', '40-49세', '50-59세', '60-69세', '70-79세', '80세이상'],\r\n    datasets: [\r\n      {\r\n        data: [1, 1, 7, 17, 37, 41],\r\n        backgroundColor: [\r\n          '#1b9e77',\r\n          '#dfc27d',\r\n          '#7fc97f',\r\n          '#e14eca',\r\n          '#d95f02',\r\n          '#1d8cf8',\r\n        ],\r\n        borderColor: '#27293d',\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    title: {\r\n      display: true,\r\n      text: '질병관리본부 2020-03-22 00시 기준',\r\n    },\r\n    layout: {\r\n      padding: 20,\r\n    },\r\n    responsive: true,\r\n    backgroundColor: ['#e14eca', '#1d8cf8'],\r\n    tooltips: {\r\n      callbacks: {\r\n        title: function(tooltipItem, data) {\r\n          return data['labels'][tooltipItem[0]['index']];\r\n        },\r\n        label: function(tooltipItem, data) {\r\n          return (\r\n            data['datasets'][0]['data'][tooltipItem['index']].toLocaleString() +\r\n            '명'\r\n          );\r\n        },\r\n      },\r\n      backgroundColor: '#f5f5f5',\r\n      titleFontColor: '#333',\r\n      bodyFontColor: '#666',\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: 'label',\r\n      intersect: 0,\r\n      position: 'nearest',\r\n    },\r\n    legend: {\r\n      position: 'bottom',\r\n      labels: {\r\n        boxWidth: 13,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      datalabels: {\r\n        anchor: 'end',\r\n        align: 'start',\r\n        font: {\r\n          size: '10',\r\n          weight: 'bold',\r\n        },\r\n        color: '#fff',\r\n        formatter: function(value, context) {\r\n          let sum = 0;\r\n          let dataArr = context.chart.data.datasets[0].data;\r\n          dataArr.map(data => {\r\n            sum += data;\r\n          });\r\n          let percentage = ((value * 100) / sum).toFixed(0) + '%';\r\n          return `${percentage}`;\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default DomesticStatusByAgeDoughnut;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction DomesticStatusByCityMap() {\r\n  const [domesticByCityNumbers, setDomesticByCityNumbers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/domesticStatusByCity/code')\r\n      .then(res => res.json())\r\n      .then(results => {\r\n        let arrayResults = Object.keys(results).map(key => {\r\n          return [\r\n            { v: key.split(',')[0], f: key.split(',')[1] },\r\n            Number(results[key].confirmator),\r\n            Number(results[key].dead),\r\n          ];\r\n        });\r\n        arrayResults.unshift(['City', '확진자', '사망자']);\r\n        setDomesticByCityNumbers(arrayResults);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Chart\r\n      chartType=\"GeoChart\"\r\n      data={domesticByCityNumbers}\r\n      options={{\r\n        region: 'KR',\r\n        resolution: 'provinces',\r\n        colorAxis: {\r\n          colors: [\r\n            '#FFD8D8',\r\n            '#FFB4B4',\r\n            '#FF5A5A',\r\n            '#FF4848',\r\n            '#FF3636',\r\n            '#FF2424',\r\n          ],\r\n        },\r\n        displayMode: 'regions',\r\n        enableRegionInteractivity: 'true',\r\n        keepAspectRatio: true,\r\n        backgroundColor: 'transparent',\r\n        legend: 'none',\r\n      }}\r\n      mapsApiKey=\"AIzaSyAPfPKg5VQGjvTQXY4ejFB09fNrZMB1pyg\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default DomesticStatusByCityMap;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTable, usePagination } from 'react-table';\r\n\r\n// import { nominalTypeHack } from 'prop-types';\r\n\r\nfunction Table({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    /* setPageSize, */\r\n    state: { pageIndex /* pageSize */ },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    usePagination,\r\n  );\r\n  return (\r\n    <>\r\n      <table className=\"table tablesorter\" {...getTableProps()}>\r\n        <thead className=\"text-primary\">\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th className=\"text-center\" {...column.getHeaderProps()}>\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td className=\"text-center\" {...cell.getCellProps()}>\r\n                      {cell.render('Cell')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-align-center mt10 mb10\">\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {'<'}\r\n        </button>{' '}\r\n        <strong>\r\n          {pageIndex + 1} / {pageOptions.length}\r\n        </strong>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          {'>'}\r\n        </button>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary\"\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          {'>>'}\r\n        </button>\r\n      </div>\r\n      {/* <div className=\"text-align-center\">\r\n        <strong>Go to page</strong>{' '}\r\n         <input\r\n          className=\"form-control\"\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n            gotoPage(page);\r\n          }}\r\n          style={{ width: '70px', display: 'inline' }}\r\n        />{' '} \r\n         <strong>Show</strong>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </select> \r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction DomesticStatusByCityTable() {\r\n  const [domesticStatusByCity, setDomesticStatusByCity] = useState([]);\r\n  useEffect(() => {\r\n    fetch('/domesticStatusByCity')\r\n      .then(res => res.json())\r\n      .then(results => {\r\n        const sortable = [];\r\n        const sortedResults = {};\r\n        for (let city in results) {\r\n          sortable.push([city, results[city]]);\r\n        }\r\n        sortable.sort((a, b) => b[1]['confirmator'] - a[1]['confirmator']);\r\n\r\n        sortable.forEach(item => {\r\n          sortedResults[item[0]] = item[1];\r\n        });\r\n        const countryByCityNumbers = [];\r\n        for (let key in sortedResults) {\r\n          if (key === 'date' || key === 'numbers') continue;\r\n          countryByCityNumbers.push({\r\n            city: key,\r\n            confirmator: `${Number(\r\n              sortedResults[key].confirmator,\r\n            ).toLocaleString()}명 (+${sortedResults[key].increase})`,\r\n            isolate: `${sortedResults[key].isolate}명`,\r\n            dead: `${sortedResults[key].dead}명`,\r\n          });\r\n        }\r\n        setDomesticStatusByCity(countryByCityNumbers);\r\n      });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      Header: '시도명',\r\n      accessor: 'city',\r\n    },\r\n    {\r\n      Header: '확진환자',\r\n      accessor: 'confirmator',\r\n    },\r\n    {\r\n      Header: '격리해제',\r\n      accessor: 'isolate',\r\n    },\r\n    {\r\n      Header: '사망자',\r\n      accessor: 'dead',\r\n    },\r\n    // {\r\n    //   Header: '확진환자 격리해제',\r\n    //   accessor: 'age',\r\n    // },\r\n    // {\r\n    //   Header: '사망자',\r\n    //   accessor: 'visits',\r\n    // },\r\n    // {\r\n    //   Header: '사망률',\r\n    //   accessor: 'status',\r\n    // },\r\n    // {\r\n    //   Header: '완치율',\r\n    //   accessor: 'progress',\r\n    // },\r\n    // {\r\n    //   Header: 'Profile Progress',\r\n    //   accessor: 'progress',\r\n    // },\r\n    // {\r\n    //   Header: 'Profile Progress',\r\n    //   accessor: 'progress',\r\n    // },\r\n  ];\r\n\r\n  return <Table columns={columns} data={domesticStatusByCity} />;\r\n}\r\n\r\nexport default DomesticStatusByCityTable;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { HorizontalBar, Bar, Pie } from 'react-chartjs-2';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n  domesticStatusChart,\r\n  domesticStatusDailyChart,\r\n  dailyConfirmator,\r\n  dailyIsolate,\r\n  dailyDead,\r\n  dailyInspectionSum,\r\n  dailyInspection,\r\n  dailyInspectionNegative,\r\n} from 'variables/charts.jsx';\r\n\r\nimport DomesticStatusBySexDoughnut from 'variables/DomesticStatusBySexDoughnut.jsx';\r\nimport DomesticStatusByAgeDoughnut from 'variables/DomesticStatusByAgeDoughnut.jsx';\r\nimport DomesticStatusByCityMap from 'variables/DomesticStatusByCityMap.jsx';\r\nimport DomesticStatusByCityTable from 'variables/DomesticStatusByCityTable.jsx';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      domesticStatus: {},\r\n      dailyData: 'data1',\r\n      sexData: 'confirmator',\r\n      ageData: 'confirmator',\r\n    };\r\n  }\r\n\r\n  setDailyData(data) {\r\n    this.setState({ dailyData: data });\r\n  }\r\n\r\n  setSexData(data) {\r\n    this.setState({ sexData: data });\r\n  }\r\n  setAgeData(data) {\r\n    this.setState({ ageData: data });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/domesticStatus')\r\n      .then(res => res.json())\r\n      .then(domesticStatus => {\r\n        domesticStatus.mortality = (\r\n          (domesticStatus.dead / domesticStatus.confirmator) *\r\n          100\r\n        ).toFixed(2);\r\n        domesticStatus.confirmator = domesticStatus.confirmator.toLocaleString();\r\n        domesticStatus.isolate = domesticStatus.isolate.toLocaleString();\r\n        domesticStatus.dead = domesticStatus.dead.toLocaleString();\r\n        domesticStatus.inspection = domesticStatus.inspection.toLocaleString();\r\n        domesticStatus.inspectionSum = domesticStatus.inspectionSum.toLocaleString();\r\n        domesticStatus.inspectionNegative = domesticStatus.inspectionNegative.toLocaleString();\r\n        this.setState({ domesticStatus });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log('render()');\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          {/* domesticStauts */}\r\n          <Row>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-danger\" />{' '}\r\n                    {this.state.domesticStatus.confirmator}명{' '}\r\n                    <span className=\"daily-span-red \">\r\n                      (+{dailyConfirmator[dailyConfirmator.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자 격리해제</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-success\" />{' '}\r\n                    {this.state.domesticStatus.isolate}명{' '}\r\n                    <span className=\"daily-span-green\">\r\n                      (+{dailyIsolate[dailyIsolate.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">사망자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-alert-circle-exc text-danger\" />{' '}\r\n                    {this.state.domesticStatus.dead}명{' '}\r\n                    <span className=\"daily-span-red\">\r\n                      (+{dailyDead[dailyDead.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">사망률</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    {this.state.domesticStatus.mortality}%\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"4\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">총 검사수</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-zoom-split \" />{' '}\r\n                    {this.state.domesticStatus.inspectionSum}명{' '}\r\n                    <span className=\"daily-span \">\r\n                      (+{dailyInspectionSum[dailyInspectionSum.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"4\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">검사진행</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-refresh-02 text-info\" />{' '}\r\n                    {this.state.domesticStatus.inspection}명{' '}\r\n                    <span className=\"daily-span \">\r\n                      ({dailyInspection[dailyInspection.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"4\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">결과 음성</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-success\" />{' '}\r\n                    {this.state.domesticStatus.inspectionNegative}명{' '}\r\n                    <span className=\"daily-span-green\">\r\n                      (+\r\n                      {\r\n                        dailyInspectionNegative[\r\n                          dailyInspectionNegative.length - 1\r\n                        ]\r\n                      }\r\n                      )\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"information\">\r\n            * (+ / - ) 질병관리본부 전일 발표 대비 변화량\r\n            <br />* 사망률 : (사망자 / 확진환자) * 100\r\n          </p>\r\n          {/* domesticStatusBycity Map,Table */}\r\n          <Row>\r\n            <Col lg=\"12\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <i className=\"tim-icons icon-map-big text-primary mr10\" />\r\n                  <h5 className=\"card-category display-content\">\r\n                    시도별 발생동향\r\n                  </h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <DomesticStatusByCityMap />\r\n                  <DomesticStatusByCityTable />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row></Row>\r\n          {/* domesticStatusDaily Chart */}\r\n          <Row>\r\n            <Col lg=\"12\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col className=\"text-left\" sm=\"6\">\r\n                      <i className=\"tim-icons icon-chart-bar-32 text-primary mr10\" />\r\n                      <h5 className=\"card-category display-content\">\r\n                        일일 발생동향\r\n                      </h5>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                      <ButtonGroup\r\n                        className=\"btn-group-toggle float-right\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <Button\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.dailyData === 'data1',\r\n                          })}\r\n                          color=\"info\"\r\n                          id=\"0\"\r\n                          size=\"sm\"\r\n                          onClick={() => this.setDailyData('data1')}\r\n                        >\r\n                          <input\r\n                            defaultChecked\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            확진자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">확진자</span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"1\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.dailyData === 'data2',\r\n                          })}\r\n                          onClick={() => this.setDailyData('data2')}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            격리해제\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">격리해제</span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"2\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.dailyData === 'data3',\r\n                          })}\r\n                          onClick={() => this.setDailyData('data3')}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            사망자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">사망자</span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Bar\r\n                      data={domesticStatusDailyChart[this.state.dailyData]}\r\n                      options={domesticStatusDailyChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {/* domesticStatusBySex Pie */}\r\n          <Row>\r\n            <Col lg=\"12\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col className=\"text-left\" sm=\"6\">\r\n                      <i className=\"tim-icons icon-chart-pie-36 text-primary mr10\" />\r\n                      <h5 className=\"card-category display-content\">\r\n                        성별 현황\r\n                      </h5>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                      <ButtonGroup\r\n                        className=\"btn-group-toggle float-right\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <Button\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.sexData === 'confirmator',\r\n                          })}\r\n                          color=\"info\"\r\n                          id=\"0\"\r\n                          size=\"sm\"\r\n                          onClick={() => this.setSexData('confirmator')}\r\n                        >\r\n                          <input\r\n                            defaultChecked\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            확진자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">확진자</span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"1\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.sexData === 'dead',\r\n                          })}\r\n                          onClick={() => this.setSexData('dead')}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            사망자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">사망자</span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Pie\r\n                      redraw\r\n                      data={DomesticStatusBySexDoughnut[this.state.sexData]}\r\n                      options={DomesticStatusBySexDoughnut.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {/* domesticStatusByAge Pie */}\r\n          <Row>\r\n            <Col lg=\"12\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col className=\"text-left\" sm=\"6\">\r\n                      <i className=\"tim-icons icon-chart-pie-36 text-primary mr10\" />\r\n                      <h5 className=\"card-category display-content\">\r\n                        연령별 현황\r\n                      </h5>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                      <ButtonGroup\r\n                        className=\"btn-group-toggle float-right\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <Button\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.ageData === 'confirmator',\r\n                          })}\r\n                          color=\"info\"\r\n                          id=\"0\"\r\n                          size=\"sm\"\r\n                          onClick={() => this.setAgeData('confirmator')}\r\n                        >\r\n                          <input\r\n                            defaultChecked\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            확진자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">확진자</span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"1\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.ageData === 'dead',\r\n                          })}\r\n                          onClick={() => this.setAgeData('dead')}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            사망자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">사망자</span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Pie\r\n                      redraw\r\n                      data={DomesticStatusByAgeDoughnut[this.state.ageData]}\r\n                      options={DomesticStatusByAgeDoughnut.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col lg=\"12\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <i className=\"tim-icons icon-chart-bar-32 text-primary mr10\" />\r\n                  <h5 className=\"card-category display-content\">\r\n                    시도별 발생동향\r\n                  </h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <HorizontalBar\r\n                      data={domesticStatusChart.data}\r\n                      options={domesticStatusChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <p className=\"information\">출처: 질병관리본부</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\n// reactstrap components\r\nimport { Row, Col, Alert, Table } from 'reactstrap';\r\n\r\nclass Information extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Alert color=\"info\">\r\n                <b className=\"information-alert\">ㆍ개요</b>\r\n                <br />\r\n                코로나 바이이러스(CoV)는 사람과 다양한 동물에 감염될 수 있는\r\n                바이러스로서 유전자 크기 27~32kb의 RNA 바이러스\r\n                <br /> <br />\r\n                <b className=\"information-alert\">ㆍ분류</b>\r\n                <br />\r\n                코로나 바이러스과에는 4개의 속(알파, 베타, 감마, 델타)이 있음\r\n                <br />\r\n                알파․베타 : 사람과 동물에게 감염\r\n                <br />\r\n                감마․델타 : 동물에게 감염\r\n                <br /> <br />\r\n                <b className=\"information-alert\">ㆍ형태</b>\r\n                <br />\r\n                형태는 코로나 바이러스의 명명과 같이 전자현미경 관찰시 구형 외부\r\n                spike 단백질이 특징적인 크라운형태\r\n                <br />\r\n                <br />\r\n                <b className=\"information-alert\">ㆍ사람감염 코로나</b>\r\n                <br />\r\n                바이러스 사람감염 코로나 바이러스는 현재까지 6종류가 알려져 있음\r\n                <br />\r\n                감기를 일으키는 유형(229E, OC43, NL63, HKU1)\r\n                <br />\r\n                중증폐렴을 일으킬 수 있는 유형(SARS-CoV, MERS-CoV)\r\n                <br /> <br />\r\n                <b className=\"information-alert\">ㆍ코로나 바이러스 분류표</b>\r\n                <Table className=\"tablesorter information-table\" responsive>\r\n                  <thead className=\"text-primary\">\r\n                    <tr>\r\n                      <th>속(genus)</th>\r\n                      <th>사람-코로나 바이러스</th>\r\n                      <th>사람 이외에 감염하는 코로나 바이러스</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>알파-코로나 바이러스(alphacoronavirus)</td>\r\n                      <td>229E, NL63</td>\r\n                      <td>\r\n                        돼지 유행성 설사 바이러스(porcine epidemic diarrhea\r\n                        virus : PEDV), (돼지) 전염성 위장염 바이러스\r\n                        (transmissible gastroenteritis virus : TGEV), 개코로나\r\n                        바이러스(canine coronavirus : CCoV), 고양이 코로나\r\n                        바이러스 (feline coronavirus : FCoV), Miniopterus\r\n                        bat(박쥐) coronavirus 1, Miniopterus bat(박쥐)\r\n                        coronavirus HKU8, Rhinolophus bat(박쥐) coronavirus\r\n                        HKU2, Scotophilus bat(박쥐) coronavirus 512\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>베타-코로나 바이러스(betacoronavirus)</td>\r\n                      <td>OC43, HKU1, SARS-CoV, MERS-CoV</td>\r\n                      <td>\r\n                        돼지 혈구 응집성뇌척수염 바이러스(porcine\r\n                        hemagglutinating encephalomyelitis virus : PHEV),\r\n                        우코로나 바이러스(bovine coronavirus : BCoV), 말코로나\r\n                        바이러스 (equine coronavirus : EqCoV), 쥐코로나\r\n                        바이러스(murine coronavirus : MuCoV),Tylonycteris\r\n                        bat(박쥐) coronavirus HKU4, Pipistrellus bat(박쥐)\r\n                        coronavirus HKU5,Rousettus bat(박쥐) coronavirus HKU9\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>감마-코로나 바이러스(gammacoronavirus)</td>\r\n                      <td>없음</td>\r\n                      <td>\r\n                        새코로나 바이러스(Avian coronavirus),흰색 돌고래(Beluga\r\n                        whale)-코로나 바이러스 SW1\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>델타-코로나 바이러스(deltacoronavirus)</td>\r\n                      <td>없음</td>\r\n                      <td>\r\n                        제주직박구리(Bulbul)-코로나 바이러스 HKU11,\r\n                        개똥지빠귀(Thrush)-코로나 바이러스 HKU12,\r\n                        킨바라(Munia)-코로나 바이러스 HKU13\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n                <br />\r\n                <b className=\"information-alert\">\r\n                  ㆍ코로나바이러스감염증-19(COVID-19) 정보\r\n                </b>\r\n                <br />\r\n                (병원체) 코로나바이러스감염증-19(COVID-19)\r\n                <br />\r\n                (감염원) 동물로 추정하고 조사중\r\n                <br />\r\n                (전파경로)\r\n                <br />\r\n                동물 → 사람 → 사람 전파 추정\r\n                <br />\r\n                사람간 전파는 비말(호흡기 분비물) 전파 추정\r\n                <br />\r\n                가족간, 의료기관 내 2차감염 확인\r\n                <br />\r\n                (임상증상) 발열, 호흡기증상(기침, 호흡곤란), 폐렴\r\n                <br />\r\n              </Alert>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"information\">출처: 질병관리본부</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Information;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTable, usePagination } from 'react-table';\r\n\r\n// import { nominalTypeHack } from 'prop-types';\r\n\r\nfunction Table({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    /* setPageSize, */\r\n    state: { pageIndex /* pageSize */ },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    usePagination,\r\n  );\r\n  return (\r\n    <>\r\n      <table className=\"table tablesorter\" {...getTableProps()}>\r\n        <thead className=\"text-primary\">\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th className=\"text-center\" {...column.getHeaderProps()}>\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td className=\"text-center\" {...cell.getCellProps()}>\r\n                      {cell.render('Cell')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-align-center mt10 mb10\">\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {'<'}\r\n        </button>{' '}\r\n        <strong>\r\n          {pageIndex + 1} / {pageOptions.length}\r\n        </strong>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          {'>'}\r\n        </button>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary\"\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          {'>>'}\r\n        </button>\r\n      </div>\r\n      <div className=\"text-align-center\">\r\n        <strong>Go to page</strong>{' '}\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n            gotoPage(page);\r\n          }}\r\n          style={{ width: '70px', display: 'inline' }}\r\n        />{' '}\r\n        {/* <strong>Show</strong>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction GlobalStautsByCounrtyTable() {\r\n  const [countryByCityNumbers, setCountryByCityNumbers] = useState([]);\r\n  useEffect(() => {\r\n    fetch('/globalStatusByCountry')\r\n      .then(res => res.json())\r\n      .then(results => {\r\n        let i = 1;\r\n        const countryByCityNumbers = [];\r\n        for (let key in results) {\r\n          if (key === 'date') continue;\r\n          countryByCityNumbers.push({\r\n            number: i++,\r\n            counrty: key,\r\n            confirmator: `${results[key].confirmator.toLocaleString()}`,\r\n            isolate: `${results[key].isolate.toLocaleString()}`,\r\n            dead: `${results[key].dead.toLocaleString()}`,\r\n            mortality: `${(\r\n              (results[key].dead / results[key].confirmator) *\r\n              100\r\n            ).toFixed(2)}%`,\r\n          });\r\n        }\r\n        setCountryByCityNumbers(countryByCityNumbers);\r\n      });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      Header: 'No',\r\n      accessor: 'number',\r\n    },\r\n    {\r\n      Header: '국가',\r\n      accessor: 'counrty',\r\n    },\r\n    {\r\n      Header: '확진환자',\r\n      accessor: 'confirmator',\r\n    },\r\n    {\r\n      Header: '격리해제',\r\n      accessor: 'isolate',\r\n    },\r\n    {\r\n      Header: '사망자',\r\n      accessor: 'dead',\r\n    },\r\n    {\r\n      Header: '사망률',\r\n      accessor: 'mortality',\r\n    },\r\n    // {\r\n    //   Header: '확진환자 격리해제',\r\n    //   accessor: 'age',\r\n    // },\r\n    // {\r\n    //   Header: '사망자',\r\n    //   accessor: 'visits',\r\n    // },\r\n    // {\r\n    //   Header: '사망률',\r\n    //   accessor: 'status',\r\n    // },\r\n    // {\r\n    //   Header: '완치율',\r\n    //   accessor: 'progress',\r\n    // },\r\n    // {\r\n    //   Header: 'Profile Progress',\r\n    //   accessor: 'progress',\r\n    // },\r\n    // {\r\n    //   Header: 'Profile Progress',\r\n    //   accessor: 'progress',\r\n    // },\r\n  ];\r\n\r\n  return <Table columns={columns} data={countryByCityNumbers} />;\r\n}\r\n\r\nexport default GlobalStautsByCounrtyTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction GlobalStautsByCounrtyTable() {\r\n  const [countryByCityNumbers, setCountryByCityNumbers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/globalStatusByCountry/mix')\r\n      .then(res => res.json())\r\n      .then(results => {\r\n        console.log(results);\r\n        let arrayResults = Object.keys(results).map(key => {\r\n          const korean = String(key).split(',')[1];\r\n          const english = String(key).split(',')[0];\r\n          return [{ v: english, f: korean }, Number(results[key].confirmator)];\r\n        });\r\n        arrayResults.unshift(['Country', '확진자']);\r\n        setCountryByCityNumbers(arrayResults);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Chart\r\n      chartType=\"GeoChart\"\r\n      data={countryByCityNumbers}\r\n      mapsApiKey=\"AIzaSyAPfPKg5VQGjvTQXY4ejFB09fNrZMB1pyg\"\r\n      options={{\r\n        colorAxis: {\r\n          colors: ['#FFB4B4', '#FF4848', '#FF3636', '#FF2424'],\r\n        },\r\n        backgroundColor: 'transparent',\r\n        legend: 'none',\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default GlobalStautsByCounrtyTable;\r\n","import React from 'react';\r\nimport /* HorizontalBar */ 'react-chartjs-2';\r\n\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from 'reactstrap';\r\nimport GlobalStautsByCounrtryTable from 'variables/GlobalStautsByCountryTable.jsx';\r\nimport GlobalStatusByCountryMap from 'variables/GlobalStatusByCountryMap.jsx';\r\n\r\nclass GlobalStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { globalStatus: {} };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/globalStatusByCountry/total')\r\n      .then(res => res.json())\r\n      .then(globalStatus => {\r\n        globalStatus.mortality = (\r\n          (globalStatus.dead / globalStatus.confirmator) *\r\n          100\r\n        ).toFixed(2);\r\n        globalStatus.confirmator = globalStatus.confirmator.toLocaleString();\r\n        globalStatus.isolate = globalStatus.isolate.toLocaleString();\r\n        globalStatus.dead = globalStatus.dead.toLocaleString();\r\n        globalStatus.numbers = globalStatus.numbers.toLocaleString();\r\n        this.setState({ globalStatus });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log('render()');\r\n\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          {/* domesticStauts */}\r\n          <Row>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-danger\" />{' '}\r\n                    {this.state.globalStatus.confirmator}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자 격리해제</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-success\" />{' '}\r\n                    {this.state.globalStatus.isolate}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">사망자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-alert-circle-exc text-danger\" />{' '}\r\n                    {this.state.globalStatus.dead}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">사망률</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-alert-circle-exc text-danger\" />{' '}\r\n                    {this.state.globalStatus.mortality}%\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">발생국</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-world text-danger\" />{' '}\r\n                    {this.state.globalStatus.numbers}개국\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"information\">* 사망률 : (사망자 / 확진환자) * 100</p>\r\n          {/* globalStatusByCountry */}\r\n          <Row>\r\n            <Col lg=\"12\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <i className=\"tim-icons icon-map-big text-primary mr10\" />\r\n                  <h5 className=\"card-category display-content\">\r\n                    나라별 발생동향\r\n                  </h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <GlobalStatusByCountryMap />\r\n                  <GlobalStautsByCounrtryTable />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalStatus;\r\n","import React from 'react';\r\n// react plugin used to create google maps\r\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps';\r\n\r\n// reactstrap components\r\nimport { Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\n\r\nconst MapWrapper = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap\r\n      defaultZoom={7}\r\n      defaultCenter={{ lat: 36.4203004, lng: 128.31796 }}\r\n      defaultOptions={{\r\n        scrollwheel: false,\r\n      }}\r\n    ></GoogleMap>\r\n  )),\r\n);\r\n\r\nclass Map extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card className=\"card-plain\">\r\n                <CardHeader>서비스 준비 중입니다.</CardHeader>\r\n                <CardBody>\r\n                  <div\r\n                    id=\"map\"\r\n                    className=\"map\"\r\n                    style={{ position: 'relative', overflow: 'hidden' }}\r\n                  >\r\n                    <MapWrapper\r\n                      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAPfPKg5VQGjvTQXY4ejFB09fNrZMB1pyg\"\r\n                      loadingElement={<div style={{ height: `100%` }} />}\r\n                      containerElement={<div style={{ height: `100%` }} />}\r\n                      mapElement={<div style={{ height: `100%` }} />}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\n\r\n// import {\r\n//   Button,\r\n//   Row,\r\n//   Card,\r\n//   CardHeader,\r\n//   CardBody,\r\n// } from 'reactstrap';\r\nimport Iframe from 'react-iframe';\r\n\r\nfunction isMobile() {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent,\r\n  );\r\n}\r\n\r\nclass News extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: '100%',\r\n      height: '100%',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!isMobile()) {\r\n      this.setState({ width: '500px' });\r\n      this.setState({ height: '300px' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          실시간 YTN 뉴스\r\n          <br></br>\r\n          <Iframe\r\n            url=\"https://www.youtube.com/embed/U_sYIKWhJvk\"\r\n            allow=\"fullscreen\"\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n            styles={{ bor: '25px' }}\r\n          />\r\n          <br></br>\r\n          실시간 KBS 뉴스\r\n          <Iframe\r\n            url=\"https://www.youtube.com/embed/zT656tdpm0Q\"\r\n            allow=\"fullscreen\"\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n          />\r\n          <br></br>\r\n          실시간 연합뉴스TV\r\n          <Iframe\r\n            url=\"https://www.youtube.com/embed/oul5ldEUbHk\"\r\n            allow=\"fullscreen\"\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\n// core components\r\nimport AdminNavbar from 'components/Navbars/AdminNavbar.jsx';\r\nimport Footer from 'components/Footer/Footer.jsx';\r\nimport Sidebar from 'components/Sidebar/Sidebar.jsx';\r\nimport FixedPlugin from 'components/FixedPlugin/FixedPlugin.jsx';\r\n\r\nimport routes from 'routes.js';\r\n\r\nvar ps;\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backgroundColor: 'blue',\r\n      sidebarOpened:\r\n        document.documentElement.className.indexOf('nav-open') !== -1,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      document.documentElement.className += ' perfect-scrollbar-on';\r\n      document.documentElement.classList.remove('perfect-scrollbar-off');\r\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\r\n      let tables = document.querySelectorAll('.table-responsive');\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      ps.destroy();\r\n      document.documentElement.className += ' perfect-scrollbar-off';\r\n      document.documentElement.classList.remove('perfect-scrollbar-on');\r\n    }\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === 'PUSH') {\r\n      if (navigator.platform.indexOf('Win') > -1) {\r\n        let tables = document.querySelectorAll('.table-responsive');\r\n        for (let i = 0; i < tables.length; i++) {\r\n          ps = new PerfectScrollbar(tables[i]);\r\n        }\r\n      }\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n  // this function opens and closes the sidebar on small devices\r\n  toggleSidebar = () => {\r\n    document.documentElement.classList.toggle('nav-open');\r\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\r\n  };\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === '/admin') {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  handleBgClick = color => {\r\n    this.setState({ backgroundColor: color });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path,\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return 'Brand';\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"wrapper\">\r\n          <Sidebar\r\n            {...this.props}\r\n            routes={routes}\r\n            bgColor={this.state.backgroundColor}\r\n            logo={{\r\n              outterLink: '/',\r\n              text: '코로나 바이러스-19 상황판',\r\n              /* imgSrc: logo, */\r\n            }}\r\n            toggleSidebar={this.toggleSidebar}\r\n          />\r\n          <div\r\n            className=\"main-panel\"\r\n            ref=\"mainPanel\"\r\n            data={this.state.backgroundColor}\r\n          >\r\n            <AdminNavbar\r\n              {...this.props}\r\n              brandText={this.getBrandText(this.props.location.pathname)}\r\n              toggleSidebar={this.toggleSidebar}\r\n              sidebarOpened={this.state.sidebarOpened}\r\n            />\r\n            <Switch>{this.getRoutes(routes)}</Switch>\r\n            {// we don't want the Footer to be rendered on map page\r\n            this.props.location.pathname.indexOf('maps') !== -1 ? null : (\r\n              <Footer fluid />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <FixedPlugin\r\n          bgColor={this.state.backgroundColor}\r\n          handleBgClick={this.handleBgClick}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import DomesticStatus from 'views/DomesticStatus.jsx';\r\nimport Information from 'views/Information.jsx';\r\nimport GlobalStatus from 'views/GlobalStatus.jsx';\r\nimport Map from 'views/Map.jsx';\r\nimport News from 'views/News.jsx';\r\n// import Rtl from 'views/Rtl.jsx';\r\n// import TableList from 'views/TableList.jsx';\r\n// import UserProfile from 'views/UserProfile.jsx';\r\n\r\nvar routes = [\r\n  {\r\n    path: '/domesticStatus',\r\n    name: '대한민국 발생 현황',\r\n    icon: 'tim-icons icon-molecule-40',\r\n    component: DomesticStatus,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/globalStatus',\r\n    name: '전 세계 발생 현황 ',\r\n    icon: 'tim-icons icon-world',\r\n    component: GlobalStatus,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/information',\r\n    name: '코로나 바이러스?',\r\n    icon: 'tim-icons icon-zoom-split',\r\n    component: Information,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/news',\r\n    name: '실시간 뉴스',\r\n    icon: 'tim-icons icon-tv-2',\r\n    component: News,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/map',\r\n    name: '지도로 알아보기',\r\n    icon: 'tim-icons icon-map-big',\r\n    component: Map,\r\n    layout: '/admin',\r\n  },\r\n  // {\r\n  //   path: '/tables',\r\n  //   name: 'Table List',\r\n  //   icon: 'tim-icons icon-puzzle-10',\r\n  //   component: TableList,\r\n  //   layout: '/admin',\r\n  // },\r\n  // {\r\n  //   path: '/typography',\r\n  //   name: 'Typography',\r\n  //   icon: 'tim-icons icon-align-center',\r\n  //   component: Typography,\r\n  //   layout: '/admin',\r\n  // },\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport AdminLayout from 'layouts/Admin.jsx';\r\n\r\nimport 'assets/css/black-dashboard-react.css';\r\nimport 'assets/demo/demo.css';\r\nimport 'assets/css/nucleo-icons.css';\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={hist}>\r\n    <Switch>\r\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\r\n      <Redirect from=\"/\" to=\"/admin/domesticStatus\" />\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}