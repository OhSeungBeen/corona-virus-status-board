{"version":3,"sources":["components/Navbars/AdminNavbar.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","components/FixedPlugin/FixedPlugin.jsx","variables/DomesticStatusByCityMap.jsx","variables/DomesticStatusByCityTable.jsx","views/DomesticStatus.jsx","views/Information.jsx","variables/GlobalStautsByCountryTable.jsx","variables/GlobalStatusByCountryMap.jsx","views/GlobalStatus.jsx","views/Map.jsx","views/News.jsx","layouts/Admin.jsx","routes.js","index.js","variables/charts.jsx"],"names":["AdminNavbar","React","Component","constructor","props","super","updateColor","window","innerWidth","this","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","className","classNames","expand","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","href","e","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","id","navbar","isOpen","nav","modalClassName","toggle","placeholder","data-dismiss","Footer","Date","getFullYear","ps","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","target","src","imgSrc","alt","text","Link","to","innerLink","data","ref","map","prop","key","redirect","path","pro","NavLink","layout","activeClassName","icon","rtlName","name","defaultProps","FixedPlugin","handleClick","classes","activateMode","mode","body","add","data-color","handleBgClick","DomesticStatusByCityMap","useState","domesticByCityNumbers","setDomesticByCityNumbers","useEffect","fetch","then","res","json","results","arrayResults","Object","keys","v","split","f","Number","confirmator","dead","unshift","chartType","options","region","resolution","colorAxis","colors","displayMode","enableRegionInteractivity","keepAspectRatio","backgroundColor","legend","mapsApiKey","rootProps","Table","columns","useTable","initialState","pageIndex","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","row","i","getRowProps","cells","cell","getCellProps","disabled","length","DomesticStatusByCityTable","domesticStatusByCity","setDomesticStatusByCity","sortable","sortedResults","city","push","sort","a","b","forEach","item","countryByCityNumbers","toLocaleString","increase","isolate","Header","accessor","Dashboard","domesticStatus","dailyDate","setDaily","Mortality","toFixed","inspection","inspectionSum","inspectionNegative","console","log","dailyInspectionSum","lg","xs","tag","dailyConfirmator","dailyIsolate","dailyDead","dailyInspection","dailyInspectionNegative","domesticStatusChart","sm","active","size","defaultChecked","domesticStatusDailyChart","Information","md","responsive","defaultValue","onChange","value","style","width","display","GlobalStautsByCounrtyTable","setCountryByCityNumbers","number","counrty","numbers","korean","String","GlobalStatus","globalStatus","result","countryNumbers","GlobalStatusByCountryMap","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","Map","position","overflow","googleMapURL","loadingElement","height","containerElement","mapElement","News","test","userAgent","url","allow","styles","bor","component","DomesticStatus","Admin","getRoutes","Route","getBrandText","mainPanel","tables","querySelectorAll","componentDidUpdate","history","action","scrollTop","scrollingElement","Switch","hist","createBrowserHistory","ReactDOM","Router","Redirect","from","getElementById","citys","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","hoverBackgroundColor","borderColor","borderWidth","borderDash","borderDashOffset","maintainAspectRatio","tooltips","titleFontColor","bodyFontColor","bodySpacing","xPadding","intersect","scales","yAxes","gridLines","drawBorder","zeroLineColor","ticks","padding","fontColor","xAxes","date","index","substring","data1","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","yAxisID","data2","data3","barPercentage","show","country","globalStatusByCountryChart","module","exports"],"mappings":"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","file":"static/js/main.58893c5c.chunk.js","sourcesContent":["import React from 'react';\r\n// nodejs library that concatenates classes\r\nimport classNames from 'classnames';\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n} from 'reactstrap';\r\n\r\nclass AdminNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapseOpen: false,\r\n      modalSearch: false,\r\n      color: 'navbar-transparent',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateColor);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateColor);\r\n  }\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  updateColor = () => {\r\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\r\n      this.setState({\r\n        color: 'bg-white',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: 'navbar-transparent',\r\n      });\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  toggleCollapse = () => {\r\n    if (this.state.collapseOpen) {\r\n      this.setState({\r\n        color: 'navbar-transparent',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: 'bg-white',\r\n      });\r\n    }\r\n    this.setState({\r\n      collapseOpen: !this.state.collapseOpen,\r\n    });\r\n  };\r\n  // this function is to open the Search modal\r\n  toggleModalSearch = () => {\r\n    this.setState({\r\n      modalSearch: !this.state.modalSearch,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar\r\n          className={classNames('navbar-absolute', this.state.color)}\r\n          expand=\"lg\"\r\n        >\r\n          <Container fluid>\r\n            <div className=\"navbar-wrapper\">\r\n              <div\r\n                className={classNames('navbar-toggle d-inline', {\r\n                  toggled: this.props.sidebarOpened,\r\n                })}\r\n              >\r\n                <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  onClick={this.props.toggleSidebar}\r\n                >\r\n                  <span className=\"navbar-toggler-bar bar1\" />\r\n                  <span className=\"navbar-toggler-bar bar2\" />\r\n                  <span className=\"navbar-toggler-bar bar3\" />\r\n                </button>\r\n              </div>\r\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                {this.props.brandText}\r\n              </NavbarBrand>\r\n            </div>\r\n            <button\r\n              aria-expanded={false}\r\n              aria-label=\"Toggle navigation\"\r\n              className=\"navbar-toggler\"\r\n              data-target=\"#navigation\"\r\n              data-toggle=\"collapse\"\r\n              id=\"navigation\"\r\n              type=\"button\"\r\n              onClick={this.toggleCollapse}\r\n            >\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            </button>\r\n            <Collapse navbar isOpen={this.state.collapseOpen}>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <InputGroup className=\"search-bar\">\r\n                  <Button\r\n                    color=\"link\"\r\n                    data-target=\"#searchModal\"\r\n                    data-toggle=\"modal\"\r\n                    id=\"search-button\"\r\n                    onClick={this.toggleModalSearch}\r\n                  >\r\n                    <i className=\"tim-icons icon-zoom-split\" />\r\n                    <span className=\"d-lg-none d-md-block\">Search</span>\r\n                  </Button>\r\n                </InputGroup>\r\n                <UncontrolledDropdown nav>\r\n                  {/* <DropdownToggle\r\n                    caret\r\n                    color=\"default\"\r\n                    data-toggle=\"dropdown\"\r\n                    nav\r\n                  >\r\n                    <div className=\"notification d-none d-lg-block d-xl-block\" />\r\n                    <i className=\"tim-icons icon-sound-wave\" />\r\n                    <p className=\"d-lg-none\">Notifications</p>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Mike John responded to your email\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        You have 5 more tasks\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Your friend Michael is in town\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Another notification\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">\r\n                        Another one\r\n                      </DropdownItem>\r\n                    </NavLink>\r\n                  </DropdownMenu> */}\r\n                </UncontrolledDropdown>\r\n                <UncontrolledDropdown nav>\r\n                  {/* <DropdownToggle\r\n                    caret\r\n                    color=\"default\"\r\n                    data-toggle=\"dropdown\"\r\n                    nav\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                    <div className=\"photo\">\r\n                      <img alt=\"...\" src={require('assets/img/anime3.png')} />\r\n                    </div>\r\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\r\n                    <p className=\"d-lg-none\">Log out</p>\r\n                  </DropdownToggle> */}\r\n                  {/* <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\r\n                    </NavLink>\r\n                    <DropdownItem divider tag=\"li\" />\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\r\n                    </NavLink>\r\n                  </DropdownMenu> */}\r\n                </UncontrolledDropdown>\r\n                <li className=\"separator d-lg-none\" />\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n        <Modal\r\n          modalClassName=\"modal-search\"\r\n          isOpen={this.state.modalSearch}\r\n          toggle={this.toggleModalSearch}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\r\n            <button\r\n              aria-label=\"Close\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              type=\"button\"\r\n              onClick={this.toggleModalSearch}\r\n            >\r\n              <i className=\"tim-icons icon-simple-remove\" />\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React from 'react';\r\n\r\nimport { Container } from 'reactstrap';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <Container fluid>\r\n          {/* <Nav>\r\n            <NavItem>\r\n              <NavLink href=\"javascript:void(0)\">Creative Tim</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"javascript:void(0)\">About Us</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"javascript:void(0)\">Blog</NavLink>\r\n            </NavItem>\r\n          </Nav> */}\r\n          <div className=\"copyright\">\r\n            © {new Date().getFullYear()} made with{' '}\r\n            <i className=\"tim-icons icon-heart-2\" /> by 오 승 빈 for a better\r\n            web.\r\n          </div>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","/*eslint-disable*/\r\nimport React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from 'prop-types';\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\n// reactstrap components\r\nimport { Nav } from 'reactstrap';\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeRoute.bind(this);\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebar, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n  linkOnClick = () => {\r\n    document.documentElement.classList.remove('nav-open');\r\n  };\r\n  render() {\r\n    const { bgColor, routes, rtlActive, logo } = this.props;\r\n    let logoImg = null;\r\n    let logoText = null;\r\n    if (logo !== undefined) {\r\n      if (logo.outterLink !== undefined) {\r\n        logoImg = (\r\n          <a\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-mini\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </a>\r\n        );\r\n        logoText = (\r\n          <a\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-normal\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </a>\r\n        );\r\n      } else {\r\n        logoImg = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-mini\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </Link>\r\n        );\r\n        logoText = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-normal\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </Link>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"sidebar\" data={bgColor}>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n          {logoImg !== null || logoText !== null ? (\r\n            <div className=\"logo\">\r\n              {/* {logoImg} */}\r\n              {logoText}\r\n            </div>\r\n          ) : null}\r\n          <Nav>\r\n            {routes.map((prop, key) => {\r\n              if (prop.redirect) return null;\r\n              return (\r\n                <li\r\n                  className={\r\n                    this.activeRoute(prop.path) +\r\n                    (prop.pro ? ' active-pro' : '')\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.layout + prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    onClick={this.props.toggleSidebar}\r\n                  >\r\n                    <i className={prop.icon} />\r\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </Nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  bgColor: 'primary',\r\n  routes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  bgColor: PropTypes.oneOf(['primary', 'blue', 'green']),\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\r\n\r\n// reactstrap components\r\n// import { Button } from 'reactstrap';\r\n\r\nclass FixedPlugin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      classes: 'dropdown show-dropdown',\r\n    };\r\n  }\r\n  handleClick = () => {\r\n    if (this.state.classes === 'dropdown show-dropdown') {\r\n      this.setState({ classes: 'dropdown show-dropdown show' });\r\n    } else {\r\n      this.setState({ classes: 'dropdown show-dropdown' });\r\n    }\r\n  };\r\n  activateMode = mode => {\r\n    switch (mode) {\r\n      case 'light':\r\n        document.body.classList.add('white-content');\r\n        break;\r\n      default:\r\n        document.body.classList.remove('white-content');\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fixed-plugin\">\r\n        <div className={this.state.classes}>\r\n          <div onClick={this.handleClick}>\r\n            <i className=\"fa fa-cog fa-2x\" />\r\n          </div>\r\n          <ul className=\"dropdown-menu show\">\r\n            <li className=\"header-title\">SIDEBAR BACKGROUND</li>\r\n            <li className=\"adjustments-line\">\r\n              <div className=\"badge-colors text-center\">\r\n                <span\r\n                  className={\r\n                    this.props.bgColor === 'primary'\r\n                      ? 'badge filter badge-primary active'\r\n                      : 'badge filter badge-primary'\r\n                  }\r\n                  data-color=\"primary\"\r\n                  onClick={() => {\r\n                    this.props.handleBgClick('primary');\r\n                  }}\r\n                />{' '}\r\n                <span\r\n                  className={\r\n                    this.props.bgColor === 'blue'\r\n                      ? 'badge filter badge-info active'\r\n                      : 'badge filter badge-info'\r\n                  }\r\n                  data-color=\"blue\"\r\n                  onClick={() => {\r\n                    this.props.handleBgClick('blue');\r\n                  }}\r\n                />{' '}\r\n                <span\r\n                  className={\r\n                    this.props.bgColor === 'green'\r\n                      ? 'badge filter badge-success active'\r\n                      : 'badge filter badge-success'\r\n                  }\r\n                  data-color=\"green\"\r\n                  onClick={() => {\r\n                    this.props.handleBgClick('green');\r\n                  }}\r\n                />{' '}\r\n              </div>\r\n            </li>\r\n            <li className=\"adjustments-line text-center color-change\">\r\n              <span className=\"color-label\">LIGHT MODE</span>{' '}\r\n              <span\r\n                className=\"badge light-badge mr-2\"\r\n                onClick={() => this.activateMode('light')}\r\n              />{' '}\r\n              <span\r\n                className=\"badge dark-badge ml-2\"\r\n                onClick={() => this.activateMode('dark')}\r\n              />{' '}\r\n              <span className=\"color-label\">DARK MODE</span>{' '}\r\n            </li>\r\n            <li></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FixedPlugin;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction DomesticStatusByCityMap() {\r\n  const [domesticByCityNumbers, setDomesticByCityNumbers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/domesticStatusByCity/code')\r\n      .then(res => res.json())\r\n      .then(results => {\r\n        let arrayResults = Object.keys(results).map(key => {\r\n          return [\r\n            { v: key.split(',')[0], f: key.split(',')[1] },\r\n            Number(results[key].confirmator),\r\n            Number(results[key].dead),\r\n          ];\r\n        });\r\n        arrayResults.unshift(['City', '확진자', '사망자']);\r\n        setDomesticByCityNumbers(arrayResults);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Chart\r\n      chartType=\"GeoChart\"\r\n      data={domesticByCityNumbers}\r\n      options={{\r\n        region: 'KR',\r\n        resolution: 'provinces',\r\n        colorAxis: {\r\n          colors: [\r\n            '#FFD8D8',\r\n            '#FFB4B4',\r\n            '#FF5A5A',\r\n            '#FF4848',\r\n            '#FF3636',\r\n            '#FF2424',\r\n          ],\r\n        },\r\n        displayMode: 'regions',\r\n        enableRegionInteractivity: 'true',\r\n        keepAspectRatio: true,\r\n        backgroundColor: 'transparent',\r\n        legend: 'none',\r\n      }}\r\n      // Note: you will need to get a mapsApiKey for your project.\r\n      // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\r\n      mapsApiKey=\"YOUR_KEY_HERE\"\r\n      rootProps={{ 'data-testid': '2' }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DomesticStatusByCityMap;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTable, usePagination } from 'react-table';\r\n\r\n// import { nominalTypeHack } from 'prop-types';\r\n\r\nfunction Table({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    /* setPageSize, */\r\n    state: { pageIndex /* pageSize */ },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    usePagination,\r\n  );\r\n  return (\r\n    <>\r\n      <table className=\"table tablesorter\" {...getTableProps()}>\r\n        <thead className=\"text-primary\">\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th className=\"text-center\" {...column.getHeaderProps()}>\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td className=\"text-center\" {...cell.getCellProps()}>\r\n                      {cell.render('Cell')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-align-center mt10 mb10\">\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {'<'}\r\n        </button>{' '}\r\n        <strong>\r\n          {pageIndex + 1} / {pageOptions.length}\r\n        </strong>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          {'>'}\r\n        </button>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary\"\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          {'>>'}\r\n        </button>\r\n      </div>\r\n      <div className=\"text-align-center\">\r\n        <strong>Go to page</strong>{' '}\r\n        {/* <input\r\n          className=\"form-control\"\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n            gotoPage(page);\r\n          }}\r\n          style={{ width: '70px', display: 'inline' }}\r\n        />{' '} */}\r\n        {/* <strong>Show</strong>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction DomesticStatusByCityTable() {\r\n  const [domesticStatusByCity, setDomesticStatusByCity] = useState([]);\r\n  useEffect(() => {\r\n    fetch('/domesticStatusByCity')\r\n      .then(res => res.json())\r\n      .then(results => {\r\n        const sortable = [];\r\n        const sortedResults = {};\r\n        for (let city in results) {\r\n          sortable.push([city, results[city]]);\r\n        }\r\n        sortable.sort((a, b) => b[1]['confirmator'] - a[1]['confirmator']);\r\n\r\n        sortable.forEach(item => {\r\n          sortedResults[item[0]] = item[1];\r\n        });\r\n        const countryByCityNumbers = [];\r\n        for (let key in sortedResults) {\r\n          if (key === 'date' || key === 'numbers') continue;\r\n          countryByCityNumbers.push({\r\n            city: key,\r\n            confirmator: `${Number(\r\n              sortedResults[key].confirmator,\r\n            ).toLocaleString()}명 (+${sortedResults[key].increase})`,\r\n            isolate: `${sortedResults[key].isolate}명`,\r\n            dead: `${sortedResults[key].dead}명`,\r\n          });\r\n        }\r\n        setDomesticStatusByCity(countryByCityNumbers);\r\n      });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      Header: '시도명',\r\n      accessor: 'city',\r\n    },\r\n    {\r\n      Header: '확진환자',\r\n      accessor: 'confirmator',\r\n    },\r\n    {\r\n      Header: '격리해제',\r\n      accessor: 'isolate',\r\n    },\r\n    {\r\n      Header: '사망자',\r\n      accessor: 'dead',\r\n    },\r\n    // {\r\n    //   Header: '확진환자 격리해제',\r\n    //   accessor: 'age',\r\n    // },\r\n    // {\r\n    //   Header: '사망자',\r\n    //   accessor: 'visits',\r\n    // },\r\n    // {\r\n    //   Header: '사망률',\r\n    //   accessor: 'status',\r\n    // },\r\n    // {\r\n    //   Header: '완치율',\r\n    //   accessor: 'progress',\r\n    // },\r\n    // {\r\n    //   Header: 'Profile Progress',\r\n    //   accessor: 'progress',\r\n    // },\r\n    // {\r\n    //   Header: 'Profile Progress',\r\n    //   accessor: 'progress',\r\n    // },\r\n  ];\r\n\r\n  return <Table columns={columns} data={domesticStatusByCity} />;\r\n}\r\n\r\nexport default DomesticStatusByCityTable;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { HorizontalBar, Bar } from 'react-chartjs-2';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n  domesticStatusChart,\r\n  domesticStatusDailyChart,\r\n  dailyConfirmator,\r\n  dailyIsolate,\r\n  dailyDead,\r\n  dailyInspectionSum,\r\n  dailyInspection,\r\n  dailyInspectionNegative,\r\n} from 'variables/charts.jsx';\r\n\r\nimport DomesticStatusByCityMap from 'variables/DomesticStatusByCityMap.jsx';\r\nimport DomesticStatusByCityTable from 'variables/DomesticStatusByCityTable.jsx';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      domesticStatus: {},\r\n      dailyDate: 'data1',\r\n    };\r\n  }\r\n\r\n  setDaily(data) {\r\n    this.setState({ dailyDate: data });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/domesticStatus')\r\n      .then(res => res.json())\r\n      .then(domesticStatus => {\r\n        domesticStatus.Mortality = (\r\n          (domesticStatus.dead / domesticStatus.confirmator) *\r\n          100\r\n        ).toFixed(2);\r\n        domesticStatus.confirmator = domesticStatus.confirmator.toLocaleString();\r\n        domesticStatus.isolate = domesticStatus.isolate.toLocaleString();\r\n        domesticStatus.dead = domesticStatus.dead.toLocaleString();\r\n        domesticStatus.inspection = domesticStatus.inspection.toLocaleString();\r\n        domesticStatus.inspectionSum = domesticStatus.inspectionSum.toLocaleString();\r\n        domesticStatus.inspectionNegative = domesticStatus.inspectionNegative.toLocaleString();\r\n        this.setState({ domesticStatus });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log('render()');\r\n    console.log(dailyInspectionSum);\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          {/* domesticStauts */}\r\n          <Row>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-danger\" />{' '}\r\n                    {this.state.domesticStatus.confirmator}명{' '}\r\n                    <span className=\"daily-span-red \">\r\n                      (+{dailyConfirmator[dailyConfirmator.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자 격리해제</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-success\" />{' '}\r\n                    {this.state.domesticStatus.isolate}명{' '}\r\n                    <span className=\"daily-span-green\">\r\n                      (+{dailyIsolate[dailyIsolate.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">사망자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-alert-circle-exc text-danger\" />{' '}\r\n                    {this.state.domesticStatus.dead}명{' '}\r\n                    <span className=\"daily-span-red\">\r\n                      (+{dailyDead[dailyDead.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">사망률</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    {this.state.domesticStatus.Mortality} %{' '}\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"4\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">총 검사수</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-zoom-split \" />{' '}\r\n                    {this.state.domesticStatus.inspectionSum}명{' '}\r\n                    <span className=\"daily-span \">\r\n                      (+{dailyInspectionSum[dailyInspectionSum.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"4\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">검사진행</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-refresh-02 text-info\" />{' '}\r\n                    {this.state.domesticStatus.inspection}명{' '}\r\n                    <span className=\"daily-span \">\r\n                      ({dailyInspection[dailyInspection.length - 1]})\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"4\" xs=\"6\" className=\"pl5 pr5\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">결과 음성</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-success\" />{' '}\r\n                    {this.state.domesticStatus.inspectionNegative}명{' '}\r\n                    <span className=\"daily-span-green\">\r\n                      (+\r\n                      {\r\n                        dailyInspectionNegative[\r\n                          dailyInspectionNegative.length - 1\r\n                        ]\r\n                      }\r\n                      )\r\n                    </span>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"information\">\r\n            * (+ / - ) 질병관리본부 전일 발표 대비 변화량\r\n            <br />* 사망률 : (사망자 / 확진환자) * 100\r\n          </p>\r\n          {/* domesticStatusBycity */}\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <i className=\"tim-icons icon-map-big text-primary mr10\" />\r\n                  <h5 className=\"card-category display-content\">\r\n                    시도별 발생동향\r\n                  </h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <DomesticStatusByCityMap />\r\n                  <DomesticStatusByCityTable />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row></Row>\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <i className=\"tim-icons icon-chart-bar-32 text-primary mr10\" />\r\n                  <h5 className=\"card-category display-content\">\r\n                    시도별 발생동향\r\n                  </h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <HorizontalBar\r\n                      data={domesticStatusChart.data}\r\n                      options={domesticStatusChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col className=\"text-left\" sm=\"6\">\r\n                      <i className=\"tim-icons icon-chart-bar-32 text-primary mr10\" />\r\n                      <h5 className=\"card-category display-content\">\r\n                        일일 발생동향\r\n                      </h5>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                      <ButtonGroup\r\n                        className=\"btn-group-toggle float-right\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <Button\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.dailyDate === 'data1',\r\n                          })}\r\n                          color=\"info\"\r\n                          id=\"0\"\r\n                          size=\"sm\"\r\n                          onClick={() => this.setDaily('data1')}\r\n                        >\r\n                          <input\r\n                            defaultChecked\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            확진자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">확진자</span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"1\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.dailyDate === 'data2',\r\n                          })}\r\n                          onClick={() => this.setDaily('data2')}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            격리해제\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">격리해제</span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"2\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames('btn-simple', {\r\n                            active: this.state.dailyDate === 'data3',\r\n                          })}\r\n                          onClick={() => this.setDaily('data3')}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            사망자\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">사망자</span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Bar\r\n                      data={domesticStatusDailyChart[this.state.dailyDate]}\r\n                      options={domesticStatusDailyChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"information\">출처: 질병관리본부</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\n// reactstrap components\r\nimport { Row, Col, Alert, Table } from 'reactstrap';\r\n\r\nclass Information extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Alert color=\"info\">\r\n                <b className=\"information-alert\">ㆍ개요</b>\r\n                <br />\r\n                코로나 바이이러스(CoV)는 사람과 다양한 동물에 감염될 수 있는\r\n                바이러스로서 유전자 크기 27~32kb의 RNA 바이러스\r\n                <br /> <br />\r\n                <b className=\"information-alert\">ㆍ분류</b>\r\n                <br />\r\n                코로나 바이러스과에는 4개의 속(알파, 베타, 감마, 델타)이 있음\r\n                <br />\r\n                알파․베타 : 사람과 동물에게 감염\r\n                <br />\r\n                감마․델타 : 동물에게 감염\r\n                <br /> <br />\r\n                <b className=\"information-alert\">ㆍ형태</b>\r\n                <br />\r\n                형태는 코로나 바이러스의 명명과 같이 전자현미경 관찰시 구형 외부\r\n                spike 단백질이 특징적인 크라운형태\r\n                <br />\r\n                <br />\r\n                <b className=\"information-alert\">ㆍ사람감염 코로나</b>\r\n                <br />\r\n                바이러스 사람감염 코로나 바이러스는 현재까지 6종류가 알려져 있음\r\n                <br />\r\n                감기를 일으키는 유형(229E, OC43, NL63, HKU1)\r\n                <br />\r\n                중증폐렴을 일으킬 수 있는 유형(SARS-CoV, MERS-CoV)\r\n                <br /> <br />\r\n                <b className=\"information-alert\">ㆍ코로나 바이러스 분류표</b>\r\n                <Table className=\"tablesorter information-table\" responsive>\r\n                  <thead className=\"text-primary\">\r\n                    <tr>\r\n                      <th>속(genus)</th>\r\n                      <th>사람-코로나 바이러스</th>\r\n                      <th>사람 이외에 감염하는 코로나 바이러스</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>알파-코로나 바이러스(alphacoronavirus)</td>\r\n                      <td>229E, NL63</td>\r\n                      <td>\r\n                        돼지 유행성 설사 바이러스(porcine epidemic diarrhea\r\n                        virus : PEDV), (돼지) 전염성 위장염 바이러스\r\n                        (transmissible gastroenteritis virus : TGEV), 개코로나\r\n                        바이러스(canine coronavirus : CCoV), 고양이 코로나\r\n                        바이러스 (feline coronavirus : FCoV), Miniopterus\r\n                        bat(박쥐) coronavirus 1, Miniopterus bat(박쥐)\r\n                        coronavirus HKU8, Rhinolophus bat(박쥐) coronavirus\r\n                        HKU2, Scotophilus bat(박쥐) coronavirus 512\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>베타-코로나 바이러스(betacoronavirus)</td>\r\n                      <td>OC43, HKU1, SARS-CoV, MERS-CoV</td>\r\n                      <td>\r\n                        돼지 혈구 응집성뇌척수염 바이러스(porcine\r\n                        hemagglutinating encephalomyelitis virus : PHEV),\r\n                        우코로나 바이러스(bovine coronavirus : BCoV), 말코로나\r\n                        바이러스 (equine coronavirus : EqCoV), 쥐코로나\r\n                        바이러스(murine coronavirus : MuCoV),Tylonycteris\r\n                        bat(박쥐) coronavirus HKU4, Pipistrellus bat(박쥐)\r\n                        coronavirus HKU5,Rousettus bat(박쥐) coronavirus HKU9\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>감마-코로나 바이러스(gammacoronavirus)</td>\r\n                      <td>없음</td>\r\n                      <td>\r\n                        새코로나 바이러스(Avian coronavirus),흰색 돌고래(Beluga\r\n                        whale)-코로나 바이러스 SW1\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>델타-코로나 바이러스(deltacoronavirus)</td>\r\n                      <td>없음</td>\r\n                      <td>\r\n                        제주직박구리(Bulbul)-코로나 바이러스 HKU11,\r\n                        개똥지빠귀(Thrush)-코로나 바이러스 HKU12,\r\n                        킨바라(Munia)-코로나 바이러스 HKU13\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n                <br />\r\n                <b className=\"information-alert\">\r\n                  ㆍ코로나바이러스감염증-19(COVID-19) 정보\r\n                </b>\r\n                <br />\r\n                (병원체) 코로나바이러스감염증-19(COVID-19)\r\n                <br />\r\n                (감염원) 동물로 추정하고 조사중\r\n                <br />\r\n                (전파경로)\r\n                <br />\r\n                동물 → 사람 → 사람 전파 추정\r\n                <br />\r\n                사람간 전파는 비말(호흡기 분비물) 전파 추정\r\n                <br />\r\n                가족간, 의료기관 내 2차감염 확인\r\n                <br />\r\n                (임상증상) 발열, 호흡기증상(기침, 호흡곤란), 폐렴\r\n                <br />\r\n              </Alert>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"information\">출처: 질병관리본부</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Information;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTable, usePagination } from 'react-table';\r\n\r\n// import { nominalTypeHack } from 'prop-types';\r\n\r\nfunction Table({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    /* setPageSize, */\r\n    state: { pageIndex /* pageSize */ },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    usePagination,\r\n  );\r\n  return (\r\n    <>\r\n      <table className=\"table tablesorter\" {...getTableProps()}>\r\n        <thead className=\"text-primary\">\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th className=\"text-center\" {...column.getHeaderProps()}>\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td className=\"text-center\" {...cell.getCellProps()}>\r\n                      {cell.render('Cell')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-align-center mt10 mb10\">\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {'<'}\r\n        </button>{' '}\r\n        <strong>\r\n          {pageIndex + 1} / {pageOptions.length}\r\n        </strong>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary \"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          {'>'}\r\n        </button>{' '}\r\n        <button\r\n          className=\"pagination-button btn btn-primary\"\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          {'>>'}\r\n        </button>\r\n      </div>\r\n      <div className=\"text-align-center\">\r\n        <strong>Go to page</strong>{' '}\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n            gotoPage(page);\r\n          }}\r\n          style={{ width: '70px', display: 'inline' }}\r\n        />{' '}\r\n        {/* <strong>Show</strong>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction GlobalStautsByCounrtyTable() {\r\n  const [countryByCityNumbers, setCountryByCityNumbers] = useState([]);\r\n  useEffect(() => {\r\n    fetch('/globalStatusByCountry')\r\n      .then(res => res.json())\r\n      .then(results => {\r\n        let i = 1;\r\n        const countryByCityNumbers = [];\r\n        for (let key in results) {\r\n          if (key === 'date' || key === 'Korea, South' || key === 'numbers')\r\n            continue;\r\n          countryByCityNumbers.push({\r\n            number: i++,\r\n            counrty: key,\r\n            confirmator: `${Number(results[key]).toLocaleString()}명`,\r\n          });\r\n        }\r\n        setCountryByCityNumbers(countryByCityNumbers);\r\n      });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      Header: '번호',\r\n      accessor: 'number',\r\n    },\r\n    {\r\n      Header: '국가',\r\n      accessor: 'counrty',\r\n    },\r\n    {\r\n      Header: '확진환자',\r\n      accessor: 'confirmator',\r\n    },\r\n    // {\r\n    //   Header: '확진환자 격리해제',\r\n    //   accessor: 'age',\r\n    // },\r\n    // {\r\n    //   Header: '사망자',\r\n    //   accessor: 'visits',\r\n    // },\r\n    // {\r\n    //   Header: '사망률',\r\n    //   accessor: 'status',\r\n    // },\r\n    // {\r\n    //   Header: '완치율',\r\n    //   accessor: 'progress',\r\n    // },\r\n    // {\r\n    //   Header: 'Profile Progress',\r\n    //   accessor: 'progress',\r\n    // },\r\n    // {\r\n    //   Header: 'Profile Progress',\r\n    //   accessor: 'progress',\r\n    // },\r\n  ];\r\n\r\n  return <Table columns={columns} data={countryByCityNumbers} />;\r\n}\r\n\r\nexport default GlobalStautsByCounrtyTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction GlobalStautsByCounrtyTable() {\r\n  const [countryByCityNumbers, setCountryByCityNumbers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/globalStatusByCountry/mix')\r\n      .then(res => res.json())\r\n      .then(results => {\r\n        delete results.numbers;\r\n        let arrayResults = Object.keys(results).map(key => {\r\n          const korean = String(key).split(',')[1];\r\n          const english = String(key).split(',')[0];\r\n          return [\r\n            { v: english, f: korean },\r\n            Number(results[key]),\r\n            /* `${korean}<br/><div>확진자${Number(results[key])}명</div>`, */\r\n          ];\r\n        });\r\n        arrayResults.unshift(['Country', '확진자']);\r\n        setCountryByCityNumbers(arrayResults);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Chart\r\n      chartType=\"GeoChart\"\r\n      data={countryByCityNumbers}\r\n      mapsApiKey=\"AIzaSyAPfPKg5VQGjvTQXY4ejFB09fNrZMB1pyg\"\r\n      options={{\r\n        colorAxis: {\r\n          colors: ['#FFB4B4', '#FF4848', '#FF3636', '#FF2424'],\r\n        },\r\n        backgroundColor: 'transparent',\r\n        legend: 'none',\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default GlobalStautsByCounrtyTable;\r\n","import React from 'react';\r\nimport /* HorizontalBar */ 'react-chartjs-2';\r\n\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from 'reactstrap';\r\nimport GlobalStautsByCounrtryTable from 'variables/GlobalStautsByCountryTable.jsx';\r\nimport GlobalStatusByCountryMap from 'variables/GlobalStatusByCountryMap.jsx';\r\n\r\nimport {\r\n  /* globalStatusByCountryChart, */\r\n  countryNumbers,\r\n} from 'variables/charts.jsx';\r\n\r\nclass GlobalStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { globalStatus: {} };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/globalStatus')\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        const globalStatus = result;\r\n        globalStatus.confirmator = globalStatus.confirmator.toLocaleString();\r\n        globalStatus.isolate = globalStatus.isolate.toLocaleString();\r\n        globalStatus.dead = globalStatus.dead.toLocaleString();\r\n        this.setState({ globalStatus });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log('render()');\r\n\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          {/* domesticStauts */}\r\n          <Row>\r\n            <Col lg=\"3\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-danger\" />{' '}\r\n                    {this.state.globalStatus.confirmator}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">확진환자 격리해제</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-single-02 text-success\" />{' '}\r\n                    {this.state.globalStatus.isolate}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">사망자</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-alert-circle-exc text-danger\" />{' '}\r\n                    {this.state.globalStatus.dead}명\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">발생국</h5>\r\n                  <CardTitle tag=\"h3\">\r\n                    <i className=\"tim-icons icon-world text-danger\" />{' '}\r\n                    {countryNumbers['numbers']}개국\r\n                  </CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* globalStatusByCountry */}\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <i className=\"tim-icons icon-map-big text-primary mr10\" />\r\n                  <h5 className=\"card-category display-content\">\r\n                    나라별 발생동향\r\n                  </h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <GlobalStatusByCountryMap />\r\n                  <GlobalStautsByCounrtryTable />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row>\r\n            <Col lg=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <i className=\"tim-icons icon-chart-bar-32 text-primary mr10\" />\r\n                  <h5 className=\"card-category display-content\">\r\n                    나라별 발생동향\r\n                  </h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <HorizontalBar\r\n                    width={100}\r\n                    height={4000}\r\n                    data={globalStatusByCountryChart.data}\r\n                    options={globalStatusByCountryChart.options}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalStatus;\r\n","import React from 'react';\r\n// react plugin used to create google maps\r\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps';\r\n\r\n// reactstrap components\r\nimport { Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\n\r\nconst MapWrapper = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap\r\n      defaultZoom={7}\r\n      defaultCenter={{ lat: 36.4203004, lng: 128.31796 }}\r\n      defaultOptions={{\r\n        scrollwheel: false,\r\n      }}\r\n    ></GoogleMap>\r\n  )),\r\n);\r\n\r\nclass Map extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card className=\"card-plain\">\r\n                <CardHeader>서비스 준비 중입니다.</CardHeader>\r\n                <CardBody>\r\n                  <div\r\n                    id=\"map\"\r\n                    className=\"map\"\r\n                    style={{ position: 'relative', overflow: 'hidden' }}\r\n                  >\r\n                    <MapWrapper\r\n                      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAPfPKg5VQGjvTQXY4ejFB09fNrZMB1pyg\"\r\n                      loadingElement={<div style={{ height: `100%` }} />}\r\n                      containerElement={<div style={{ height: `100%` }} />}\r\n                      mapElement={<div style={{ height: `100%` }} />}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\n\r\n// import {\r\n//   Button,\r\n//   Row,\r\n//   Card,\r\n//   CardHeader,\r\n//   CardBody,\r\n// } from 'reactstrap';\r\nimport Iframe from 'react-iframe';\r\n\r\nfunction isMobile() {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent,\r\n  );\r\n}\r\n\r\nclass News extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: '100%',\r\n      height: '100%',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!isMobile()) {\r\n      this.setState({ width: '500px' });\r\n      this.setState({ height: '300px' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          실시간 YTN 뉴스\r\n          <br></br>\r\n          <Iframe\r\n            url=\"https://www.youtube.com/embed/U_sYIKWhJvk\"\r\n            allow=\"fullscreen\"\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n            styles={{ bor: '25px' }}\r\n          />\r\n          <br></br>\r\n          실시간 KBS 뉴스\r\n          <Iframe\r\n            url=\"https://www.youtube.com/embed/zT656tdpm0Q\"\r\n            allow=\"fullscreen\"\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n          />\r\n          <br></br>\r\n          실시간 연합뉴스TV\r\n          <Iframe\r\n            url=\"https://www.youtube.com/embed/oul5ldEUbHk\"\r\n            allow=\"fullscreen\"\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\n// core components\r\nimport AdminNavbar from 'components/Navbars/AdminNavbar.jsx';\r\nimport Footer from 'components/Footer/Footer.jsx';\r\nimport Sidebar from 'components/Sidebar/Sidebar.jsx';\r\nimport FixedPlugin from 'components/FixedPlugin/FixedPlugin.jsx';\r\n\r\nimport routes from 'routes.js';\r\n\r\nvar ps;\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backgroundColor: 'blue',\r\n      sidebarOpened:\r\n        document.documentElement.className.indexOf('nav-open') !== -1,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      document.documentElement.className += ' perfect-scrollbar-on';\r\n      document.documentElement.classList.remove('perfect-scrollbar-off');\r\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\r\n      let tables = document.querySelectorAll('.table-responsive');\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf('Win') > -1) {\r\n      ps.destroy();\r\n      document.documentElement.className += ' perfect-scrollbar-off';\r\n      document.documentElement.classList.remove('perfect-scrollbar-on');\r\n    }\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === 'PUSH') {\r\n      if (navigator.platform.indexOf('Win') > -1) {\r\n        let tables = document.querySelectorAll('.table-responsive');\r\n        for (let i = 0; i < tables.length; i++) {\r\n          ps = new PerfectScrollbar(tables[i]);\r\n        }\r\n      }\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n  // this function opens and closes the sidebar on small devices\r\n  toggleSidebar = () => {\r\n    document.documentElement.classList.toggle('nav-open');\r\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\r\n  };\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === '/admin') {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  handleBgClick = color => {\r\n    this.setState({ backgroundColor: color });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path,\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return 'Brand';\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"wrapper\">\r\n          <Sidebar\r\n            {...this.props}\r\n            routes={routes}\r\n            bgColor={this.state.backgroundColor}\r\n            logo={{\r\n              outterLink: '/',\r\n              text: '코로나 바이러스-19 상황판',\r\n              /* imgSrc: logo, */\r\n            }}\r\n            toggleSidebar={this.toggleSidebar}\r\n          />\r\n          <div\r\n            className=\"main-panel\"\r\n            ref=\"mainPanel\"\r\n            data={this.state.backgroundColor}\r\n          >\r\n            <AdminNavbar\r\n              {...this.props}\r\n              brandText={this.getBrandText(this.props.location.pathname)}\r\n              toggleSidebar={this.toggleSidebar}\r\n              sidebarOpened={this.state.sidebarOpened}\r\n            />\r\n            <Switch>{this.getRoutes(routes)}</Switch>\r\n            {// we don't want the Footer to be rendered on map page\r\n            this.props.location.pathname.indexOf('maps') !== -1 ? null : (\r\n              <Footer fluid />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <FixedPlugin\r\n          bgColor={this.state.backgroundColor}\r\n          handleBgClick={this.handleBgClick}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import DomesticStatus from 'views/DomesticStatus.jsx';\r\nimport Information from 'views/Information.jsx';\r\nimport GlobalStatus from 'views/GlobalStatus.jsx';\r\nimport Map from 'views/Map.jsx';\r\nimport News from 'views/News.jsx';\r\n// import Rtl from 'views/Rtl.jsx';\r\n// import TableList from 'views/TableList.jsx';\r\n// import UserProfile from 'views/UserProfile.jsx';\r\n\r\nvar routes = [\r\n  {\r\n    path: '/domesticStatus',\r\n    name: '대한민국 발생 현황',\r\n    icon: 'tim-icons icon-molecule-40',\r\n    component: DomesticStatus,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/globalStatus',\r\n    name: '전 세계 발생 현황 ',\r\n    icon: 'tim-icons icon-world',\r\n    component: GlobalStatus,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/information',\r\n    name: '코로나 바이러스?',\r\n    icon: 'tim-icons icon-zoom-split',\r\n    component: Information,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/news',\r\n    name: '실시간 뉴스',\r\n    icon: 'tim-icons icon-tv-2',\r\n    component: News,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/map',\r\n    name: '지도로 알아보기',\r\n    icon: 'tim-icons icon-map-big',\r\n    component: Map,\r\n    layout: '/admin',\r\n  },\r\n  // {\r\n  //   path: '/tables',\r\n  //   name: 'Table List',\r\n  //   icon: 'tim-icons icon-puzzle-10',\r\n  //   component: TableList,\r\n  //   layout: '/admin',\r\n  // },\r\n  // {\r\n  //   path: '/typography',\r\n  //   name: 'Typography',\r\n  //   icon: 'tim-icons icon-align-center',\r\n  //   component: Typography,\r\n  //   layout: '/admin',\r\n  // },\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport AdminLayout from 'layouts/Admin.jsx';\r\n\r\nimport 'assets/css/black-dashboard-react.css';\r\nimport 'assets/demo/demo.css';\r\nimport 'assets/css/nucleo-icons.css';\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={hist}>\r\n    <Switch>\r\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\r\n      <Redirect from=\"/\" to=\"/admin/domesticStatus\" />\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n","// domesticStatusBy------------------------------------------------------\r\nconst citys = [];\r\nconst numbers = [];\r\nfetch('/domesticStatusByCity')\r\n  .then(res => res.json())\r\n  .then(result => {\r\n    const domesticStatusByCity = result;\r\n\r\n    const sortable = [];\r\n    for (let city in domesticStatusByCity) {\r\n      sortable.push([city, domesticStatusByCity[city]]);\r\n    }\r\n    sortable.sort((a, b) => b[1].confirmator - a[1].confirmator);\r\n\r\n    sortable.forEach(item => {\r\n      citys.push(item[0]);\r\n      numbers.push(item[1].confirmator);\r\n    });\r\n  });\r\n\r\nlet domesticStatusChart = {\r\n  data: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n    return {\r\n      labels: citys,\r\n      datasets: [\r\n        {\r\n          label: '확진환자',\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: numbers,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: '#f5f5f5',\r\n      titleFontColor: '#333',\r\n      bodyFontColor: '#666',\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: 'nearest',\r\n      intersect: 0,\r\n      position: 'nearest',\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n//-----------------------------------------------------------------------------------------------------\r\nconst confirmator = [];\r\nconst isolate = [];\r\nconst dead = [];\r\nconst date = [];\r\nconst dailyConfirmator = [];\r\nconst dailyIsolate = [];\r\nconst dailyDead = [];\r\nconst dailyInspectionSum = [];\r\nconst dailyInspection = [];\r\nconst dailyInspectionNegative = [];\r\n\r\nfetch('/domesticStatus/dailyData')\r\n  .then(res => res.json())\r\n  .then(results => {\r\n    for (let index in results) {\r\n      if (index === '0') continue;\r\n      dailyConfirmator.push(\r\n        results[index].confirmator - results[index - 1].confirmator,\r\n      );\r\n      dailyIsolate.push(results[index].isolate - results[index - 1].isolate);\r\n      dailyDead.push(results[index].dead - results[index - 1].dead);\r\n      //데이터 쌓이면 수정할것\r\n      if (Number(index) === Object.keys(results).length - 1) {\r\n        dailyInspectionSum.push(\r\n          results[index].inspectionSum - results[index - 1].inspectionSum,\r\n        );\r\n        dailyInspection.push(\r\n          results[index].inspection - results[index - 1].inspection,\r\n        );\r\n        dailyInspectionNegative.push(\r\n          results[index].inspectionNegative -\r\n            results[index - 1].inspectionNegative,\r\n        );\r\n      }\r\n\r\n      confirmator.push(results[index].confirmator);\r\n      isolate.push(results[index].isolate);\r\n      dead.push(results[index].dead);\r\n      date.push(results[index].date.substring(5, 10));\r\n    }\r\n  });\r\n\r\nlet domesticStatusDailyChart = {\r\n  data1: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n\r\n    return {\r\n      datasets: [\r\n        {\r\n          label: '확진자',\r\n          type: 'line',\r\n          data: dailyConfirmator,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: '#1f8ef1',\r\n          pointBorderColor: 'rgba(255,255,255,0)',\r\n          pointHoverBackgroundColor: '#1f8ef1',\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          yAxisID: 'y-axis-2',\r\n        },\r\n        {\r\n          type: 'bar',\r\n          label: '누적확진자',\r\n          data: confirmator,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          yAxisID: 'y-axis-1',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n\r\n    return {\r\n      datasets: [\r\n        {\r\n          label: '격리헤제',\r\n          type: 'line',\r\n          data: dailyIsolate,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: '#1f8ef1',\r\n          pointBorderColor: 'rgba(255,255,255,0)',\r\n          pointHoverBackgroundColor: '#1f8ef1',\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          yAxisID: 'y-axis-2',\r\n        },\r\n        {\r\n          type: 'bar',\r\n          label: '누적 격리헤제',\r\n          data: isolate,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          yAxisID: 'y-axis-1',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n\r\n    return {\r\n      datasets: [\r\n        {\r\n          label: '사망자',\r\n          type: 'line',\r\n          data: dailyDead,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: '#1f8ef1',\r\n          pointBorderColor: 'rgba(255,255,255,0)',\r\n          pointHoverBackgroundColor: '#1f8ef1',\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          yAxisID: 'y-axis-2',\r\n        },\r\n        {\r\n          type: 'bar',\r\n          label: '누적 사망자',\r\n          data: dead,\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          yAxisID: 'y-axis-1',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    legend: {\r\n      display: true,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: '#f5f5f5',\r\n      titleFontColor: '#333',\r\n      bodyFontColor: '#666',\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: 'label',\r\n      intersect: 0,\r\n      position: 'nearest',\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barPercentage: 0.5,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(29,140,248,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9a9a9a',\r\n          },\r\n          labels: date,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-1',\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(29,140,248,0.0)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            // beginAtZero: true,\r\n            padding: 10,\r\n            fontColor: '#9a9a9a',\r\n          },\r\n          labels: {\r\n            show: true,\r\n          },\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-2',\r\n          gridLines: {\r\n            display: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            // beginAtZero: true,\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n          labels: {\r\n            show: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// globalStatusByCountry------------------------------\r\nconst country = [];\r\nconst countryByCityNumbers = [];\r\nconst countryNumbers = {};\r\nfetch('/globalStatusByCountry')\r\n  .then(res => res.json())\r\n  .then(results => {\r\n    for (let key in results) {\r\n      if (key === 'date' || key === 'Korea, South' || key === 'numbers')\r\n        continue;\r\n      country.push(key);\r\n      countryByCityNumbers.push(results[key]);\r\n    }\r\n    countryNumbers['numbers'] = results.numbers;\r\n  });\r\n\r\nlet globalStatusByCountryChart = {\r\n  data: function(canvas) {\r\n    let ctx = canvas.getContext('2d');\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n    gradientStroke.addColorStop(1, 'rgba(72,72,176,0.1)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(72,72,176,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(119,52,169,0)');\r\n    return {\r\n      labels: country,\r\n      datasets: [\r\n        {\r\n          label: '확진환자',\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#d048b6',\r\n          borderWidth: 1,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: countryByCityNumbers,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: '#f5f5f5',\r\n      titleFontColor: '#333',\r\n      bodyFontColor: '#666',\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: 'nearest',\r\n      intersect: 0,\r\n      position: 'nearest',\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(225,78,202,0.1)',\r\n            zeroLineColor: 'transparent',\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nmodule.exports = {\r\n  domesticStatusChart,\r\n  domesticStatusDailyChart,\r\n  globalStatusByCountryChart,\r\n  countryNumbers,\r\n  dailyConfirmator,\r\n  dailyIsolate,\r\n  dailyDead,\r\n  dailyInspectionSum,\r\n  dailyInspection,\r\n  dailyInspectionNegative,\r\n};\r\n"],"sourceRoot":""}